{"version":3,"file":"hoist-jest-mock.test.js","sourceRoot":"","sources":["../src/hoist-jest-mock.test.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAE3D,8EAAoE;AACpE,uDAAkD;AAElD,MAAM,EAAE,UAAU,EAAE,GAAG,gCAAW,CAAC;AACnC,MAAM,UAAU,GAAG,IAAI,UAAU,CAAC;IAChC,MAAM,EAAE,2BAA2B;IACnC,aAAa,EAAE;QACb,WAAW,EAAE,IAAI;QACjB,UAAU,EAAE,QAAQ;KACrB;CACF,CAAC,CAAC;AAEH,2EAA2E;AAC3E,MAAM,oBAAoB,GAAG;IAC3B,SAAS,CAAC,gBAAgB;IAC1B,SAAS,CAAC,kBAAkB;IAC5B,SAAS,CAAC,uBAAuB;IACjC,SAAS,CAAC,wBAAwB;IAClC,SAAS,CAAC,oBAAoB;IAC9B,SAAS,CAAC,qCAAqC;IAC/C,SAAS,CAAC,gDAAgD;IAC1D,SAAS,CAAC,0BAA0B;IACpC,SAAS,CAAC,kCAAkC;IAC5C,SAAS,CAAC,sBAAsB;IAChC,SAAS,CAAC,qBAAqB;IAC/B,SAAS,CAAC,oBAAoB;IAC9B,SAAS,CAAC,wBAAwB;IAClC,SAAS,CAAC,sBAAsB;IAChC,SAAS,CAAC,uCAAuC;IACjD,SAAS,CAAC,4BAA4B;IACtC,SAAS,CAAC,kDAAkD;IAC5D,SAAS,CAAC,4BAA4B;IACtC,SAAS,CAAC,oCAAoC;IAC9C,SAAS,CAAC,GAAG;IACb,SAAS,CAAC,uBAAuB;IACjC,SAAS,CAAC,qBAAqB;IAC/B,SAAS,CAAC,oBAAoB;IAC9B,SAAS,CAAC,sBAAsB;IAChC,SAAS,CAAC,4BAA4B;IACtC,SAAS,CAAC,uCAAuC;IACjD,SAAS,CAAC,wBAAwB;IAClC,SAAS,CAAC,kDAAkD;IAC5D,SAAS,CAAC,4BAA4B;IACtC,SAAS,CAAC,oCAAoC;IAC9C,SAAS,CAAC,GAAG;CACd,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAEb,UAAU,CAAC,GAAG,CAAC,iBAAiB,EAAE,+BAAa,EAAE;IAC/C,OAAO,EAAE;QACP;YACE,+CAA+C;YAC/C,IAAI,EAAE,oBAAoB;YAC1B,MAAM,EAAE;gBACN,EAAE,SAAS,EAAE,2BAA2B,EAAE,IAAI,EAAE,CAAC,EAAE;gBACnD,EAAE,SAAS,EAAE,2BAA2B,EAAE,IAAI,EAAE,CAAC,EAAE;gBACnD,EAAE,SAAS,EAAE,2BAA2B,EAAE,IAAI,EAAE,CAAC,EAAE;gBACnD,EAAE,SAAS,EAAE,2BAA2B,EAAE,IAAI,EAAE,CAAC,EAAE;gBACnD,EAAE,SAAS,EAAE,2BAA2B,EAAE,IAAI,EAAE,CAAC,EAAE;gBACnD,EAAE,SAAS,EAAE,2BAA2B,EAAE,IAAI,EAAE,CAAC,EAAE;gBACnD,EAAE,SAAS,EAAE,2BAA2B,EAAE,IAAI,EAAE,CAAC,EAAE;gBAEnD,EAAE,SAAS,EAAE,2BAA2B,EAAE,IAAI,EAAE,EAAE,EAAE;gBACpD,EAAE,SAAS,EAAE,2BAA2B,EAAE,IAAI,EAAE,EAAE,EAAE;gBACpD,EAAE,SAAS,EAAE,2BAA2B,EAAE,IAAI,EAAE,EAAE,EAAE;gBACpD,EAAE,SAAS,EAAE,2BAA2B,EAAE,IAAI,EAAE,EAAE,EAAE;gBACpD,EAAE,SAAS,EAAE,2BAA2B,EAAE,IAAI,EAAE,EAAE,EAAE;gBACpD,EAAE,SAAS,EAAE,2BAA2B,EAAE,IAAI,EAAE,EAAE,EAAE;gBACpD,EAAE,SAAS,EAAE,2BAA2B,EAAE,IAAI,EAAE,EAAE,EAAE;gBAEpD,EAAE,SAAS,EAAE,2BAA2B,EAAE,IAAI,EAAE,EAAE,EAAE;gBACpD,EAAE,SAAS,EAAE,2BAA2B,EAAE,IAAI,EAAE,EAAE,EAAE;gBACpD,EAAE,SAAS,EAAE,2BAA2B,EAAE,IAAI,EAAE,EAAE,EAAE;gBACpD,EAAE,SAAS,EAAE,2BAA2B,EAAE,IAAI,EAAE,EAAE,EAAE;gBACpD,EAAE,SAAS,EAAE,2BAA2B,EAAE,IAAI,EAAE,EAAE,EAAE;gBACpD,EAAE,SAAS,EAAE,2BAA2B,EAAE,IAAI,EAAE,EAAE,EAAE;gBACpD,EAAE,SAAS,EAAE,2BAA2B,EAAE,IAAI,EAAE,EAAE,EAAE;aACrD;SACF;QACD;YACE,wCAAwC;YACxC,kBAAkB;YAClB,IAAI,EAAE;gBACJ,+CAA+C;gBAC/C,6BAA6B;aAC9B,CAAC,IAAI,CAAC,IAAI,CAAC;YACZ,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,2BAA2B,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;SAC9D;QACD;YACE,mCAAmC;YACnC,IAAI,EAAE,CAAC,oBAAoB,EAAE,cAAc,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;YACvD,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,2BAA2B,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;SAC9D;QACD,IAAI;QACJ,wCAAwC;QACxC,iEAAiE;QACjE,kEAAkE;QAClE,KAAK;QACL;YACE,mCAAmC;YACnC,IAAI,EAAE,CAAC,yBAAyB,EAAE,cAAc,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;YAC5D,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,2BAA2B,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;SAC9D;QACD,IAAI;QACJ,wCAAwC;QACxC,6DAA6D;QAC7D,kEAAkE;QAClE,KAAK;QACL;YACE,mCAAmC;YACnC,IAAI,EAAE,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;YAChD,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,2BAA2B,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;SAC9D;QACD;YACE,mCAAmC;YACnC,IAAI,EAAE,CAAC,oCAAoC,EAAE,cAAc,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;YACvE,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,2BAA2B,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;SAC9D;QACD;YACE,mCAAmC;YACnC,IAAI,EAAE,CAAC,mCAAmC,EAAE,cAAc,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;YACtE,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,2BAA2B,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;SAC9D;QACD;YACE,mCAAmC;YACnC,IAAI,EAAE,CAAC,qCAAqC,EAAE,cAAc,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;YACxE,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,2BAA2B,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;SAC9D;KACF;IACD,KAAK,EAAE;QACL;YACE,wCAAwC;YACxC,IAAI,EAAE;gBACJ,sCAAsC;gBACtC,oCAAoC;gBACpC,YAAY;gBACZ,uDAAuD;gBACvD,oDAAoD;gBACpD,QAAQ;gBACR,MAAM;gBACN,KAAK;aACN,CAAC,IAAI,CAAC,IAAI,CAAC;SACb;KACF;CACF,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport { ESLintUtils } from '@typescript-eslint/experimental-utils';\nimport { hoistJestMock } from './hoist-jest-mock';\n\nconst { RuleTester } = ESLintUtils;\nconst ruleTester = new RuleTester({\n  parser: '@typescript-eslint/parser',\n  parserOptions: {\n    ecmaVersion: 2018,\n    sourceType: 'module'\n  }\n});\n\n// These are the CODE_WITH_HOISTING cases from ts-jest's hoist-jest.spec.ts\nconst INVALID_EXAMPLE_CODE = [\n  /* 001 */ \"require('foo')\",\n  /* 002 */ 'console.log(foo)',\n  /* 003 */ 'jest.enableAutomock()',\n  /* 004 */ 'jest.disableAutomock()',\n  /* 005 */ \"jest.mock('./foo')\",\n  /* 006 */ \"jest.mock('./foo/bar', () => 'bar')\",\n  /* 007 */ \"jest.unmock('./bar/foo').dontMock('./bar/bar')\",\n  /* 008 */ \"jest.deepUnmock('./foo')\",\n  /* 009 */ \"jest.mock('./foo').mock('./bar')\",\n  /* 010 */ 'const func = () => {',\n  /* 011 */ \"  const bar = 'bar'\",\n  /* 012 */ '  console.log(bar)',\n  /* 013 */ \"  jest.unmock('./foo')\",\n  /* 014 */ \"  jest.mock('./bar')\",\n  /* 015 */ \"  jest.mock('./bar/foo', () => 'foo')\",\n  /* 016 */ \"  jest.unmock('./foo/bar')\",\n  /* 017 */ \"  jest.unmock('./bar/foo').dontMock('./bar/bar')\",\n  /* 018 */ \"  jest.deepUnmock('./bar')\",\n  /* 019 */ \"  jest.mock('./foo').mock('./bar')\",\n  /* 020 */ '}',\n  /* 021 */ 'const func2 = () => {',\n  /* 022 */ \"  const bar = 'bar'\",\n  /* 023 */ '  console.log(bar)',\n  /* 024 */ \"  jest.mock('./bar')\",\n  /* 025 */ \"  jest.unmock('./foo/bar')\",\n  /* 026 */ \"  jest.mock('./bar/foo', () => 'foo')\",\n  /* 027 */ \"  jest.unmock('./foo')\",\n  /* 028 */ \"  jest.unmock('./bar/foo').dontMock('./bar/bar')\",\n  /* 029 */ \"  jest.deepUnmock('./bar')\",\n  /* 030 */ \"  jest.mock('./foo').mock('./bar')\",\n  /* 031 */ '}'\n].join('\\n');\n\nruleTester.run('hoist-jest-mock', hoistJestMock, {\n  invalid: [\n    {\n      // Detect all the Jest APIs detected by ts-jest\n      code: INVALID_EXAMPLE_CODE,\n      errors: [\n        { messageId: 'error-unhoisted-jest-mock', line: 3 },\n        { messageId: 'error-unhoisted-jest-mock', line: 4 },\n        { messageId: 'error-unhoisted-jest-mock', line: 5 },\n        { messageId: 'error-unhoisted-jest-mock', line: 6 },\n        { messageId: 'error-unhoisted-jest-mock', line: 7 },\n        { messageId: 'error-unhoisted-jest-mock', line: 8 },\n        { messageId: 'error-unhoisted-jest-mock', line: 9 },\n\n        { messageId: 'error-unhoisted-jest-mock', line: 13 },\n        { messageId: 'error-unhoisted-jest-mock', line: 14 },\n        { messageId: 'error-unhoisted-jest-mock', line: 15 },\n        { messageId: 'error-unhoisted-jest-mock', line: 16 },\n        { messageId: 'error-unhoisted-jest-mock', line: 17 },\n        { messageId: 'error-unhoisted-jest-mock', line: 18 },\n        { messageId: 'error-unhoisted-jest-mock', line: 19 },\n\n        { messageId: 'error-unhoisted-jest-mock', line: 24 },\n        { messageId: 'error-unhoisted-jest-mock', line: 25 },\n        { messageId: 'error-unhoisted-jest-mock', line: 26 },\n        { messageId: 'error-unhoisted-jest-mock', line: 27 },\n        { messageId: 'error-unhoisted-jest-mock', line: 28 },\n        { messageId: 'error-unhoisted-jest-mock', line: 29 },\n        { messageId: 'error-unhoisted-jest-mock', line: 30 }\n      ]\n    },\n    {\n      // A simple failure using realistic code\n      // prettier-ignore\n      code: [\n        \"const soundPlayer = require('./SoundPlayer');\",\n        \"jest.mock('./SoundPlayer');\"\n      ].join('\\n'),\n      errors: [{ messageId: 'error-unhoisted-jest-mock', line: 2 }]\n    },\n    {\n      // Import syntaxes that should fail\n      code: [\"import x from 'y';\", 'jest.mock();'].join('\\n'),\n      errors: [{ messageId: 'error-unhoisted-jest-mock', line: 2 }]\n    },\n    // {\n    //   // Import syntaxes that should fail\n    //   code: [\"export { x } from 'y';\", 'jest.mock();'].join('\\n'),\n    //   errors: [{ messageId: 'error-unhoisted-jest-mock', line: 2 }]\n    // },\n    {\n      // Import syntaxes that should fail\n      code: [\"import * as x from 'y';\", 'jest.mock();'].join('\\n'),\n      errors: [{ messageId: 'error-unhoisted-jest-mock', line: 2 }]\n    },\n    // {\n    //   // Import syntaxes that should fail\n    //   code: [\"export * from 'y';\", 'jest.mock();'].join('\\n'),\n    //   errors: [{ messageId: 'error-unhoisted-jest-mock', line: 2 }]\n    // },\n    {\n      // Import syntaxes that should fail\n      code: [\"import 'y';\", 'jest.mock();'].join('\\n'),\n      errors: [{ messageId: 'error-unhoisted-jest-mock', line: 2 }]\n    },\n    {\n      // Import syntaxes that should fail\n      code: [\"const x = require('package-name');\", 'jest.mock();'].join('\\n'),\n      errors: [{ messageId: 'error-unhoisted-jest-mock', line: 2 }]\n    },\n    {\n      // Import syntaxes that should fail\n      code: [\"const x = import('package-name');\", 'jest.mock();'].join('\\n'),\n      errors: [{ messageId: 'error-unhoisted-jest-mock', line: 2 }]\n    },\n    {\n      // Import syntaxes that should fail\n      code: [\"import x = require('package-name');\", 'jest.mock();'].join('\\n'),\n      errors: [{ messageId: 'error-unhoisted-jest-mock', line: 2 }]\n    }\n  ],\n  valid: [\n    {\n      // A simple success using realistic code\n      code: [\n        'const mockPlaySoundFile = jest.fn();',\n        \"jest.mock('./SoundPlayer', () => {\",\n        '  return {',\n        '    SoundPlayer: jest.fn().mockImplementation(() => {',\n        '      return { playSoundFile: mockPlaySoundFile };',\n        '    })',\n        '  };',\n        '});'\n      ].join('\\n')\n    }\n  ]\n});\n"]}