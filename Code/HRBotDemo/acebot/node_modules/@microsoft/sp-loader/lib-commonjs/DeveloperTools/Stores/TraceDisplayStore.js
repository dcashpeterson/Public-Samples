"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TraceDisplayStore = exports.LogLevel = void 0;
var tslib_1 = require("tslib");
var sp_diagnostics_1 = require("@microsoft/sp-diagnostics");
var BaseStore_1 = tslib_1.__importDefault(require("./BaseStore"));
var LogLevel;
(function (LogLevel) {
    LogLevel[LogLevel["all"] = 0] = "all";
    LogLevel[LogLevel["verbose"] = 1] = "verbose";
    LogLevel[LogLevel["info"] = 2] = "info";
    LogLevel[LogLevel["warning"] = 3] = "warning";
    LogLevel[LogLevel["error"] = 4] = "error";
})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));
/**
 *  Implementation for managing the data of user-selected filters and all trace data
 *  for a TraceDisplay.
 */
var TraceDisplayStore = /** @class */ (function (_super) {
    tslib_1.__extends(TraceDisplayStore, _super);
    function TraceDisplayStore() {
        var _this = _super.call(this) || this;
        _this._filter = {
            level: { all: true, verbose: true, info: true, warning: true, error: true, none: true },
            source: { all: true, none: true },
            scope: { all: true, none: true }
        };
        _this._traces = [];
        return _this;
    }
    Object.defineProperty(TraceDisplayStore, "instance", {
        get: function () {
            if (!this._instance) {
                this._instance = new TraceDisplayStore();
            }
            return this._instance;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TraceDisplayStore.prototype, "traces", {
        get: function () {
            var _this = this;
            var data = sp_diagnostics_1._LogEvent.logManager.events;
            this._traces = [];
            if (data) {
                data.forEach(function (value) {
                    if (value) {
                        _this._traces.push(value);
                    }
                });
            }
            return this._traces;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TraceDisplayStore.prototype, "currentFilter", {
        get: function () {
            return this._filter;
        },
        enumerable: false,
        configurable: true
    });
    TraceDisplayStore.prototype.applyTraceFilter = function (filter) {
        this._filter = filter;
        this.emitChange();
    };
    return TraceDisplayStore;
}(BaseStore_1.default));
exports.TraceDisplayStore = TraceDisplayStore;
// instantiate the store so it can start listening to dispatch events
exports.default = TraceDisplayStore.instance;
//# sourceMappingURL=TraceDisplayStore.js.map