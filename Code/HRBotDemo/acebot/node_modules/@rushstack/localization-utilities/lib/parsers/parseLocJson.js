"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseLocJson = void 0;
const node_core_library_1 = require("@rushstack/node-core-library");
const locJson_schema_json_1 = __importDefault(require("../schemas/locJson.schema.json"));
const LOC_JSON_SCHEMA = node_core_library_1.JsonSchema.fromLoadedObject(locJson_schema_json_1.default);
/**
 * @public
 */
function parseLocJson({ content, filePath, ignoreString }) {
    const parsedFile = node_core_library_1.JsonFile.parseString(content);
    try {
        LOC_JSON_SCHEMA.validateObject(parsedFile, filePath);
    }
    catch (e) {
        throw new Error(`The loc file is invalid. Error: ${e}`);
    }
    if (ignoreString) {
        const newParsedFile = {};
        for (const [key, stringData] of Object.entries(parsedFile)) {
            if (!ignoreString(filePath, key)) {
                newParsedFile[key] = stringData;
            }
        }
        return newParsedFile;
    }
    else {
        return parsedFile;
    }
}
exports.parseLocJson = parseLocJson;
//# sourceMappingURL=parseLocJson.js.map