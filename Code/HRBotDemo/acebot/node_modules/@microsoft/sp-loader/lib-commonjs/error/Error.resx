<?xml version="1.0" encoding="utf-8"?>
<root>
  <data name="$FILE_ID" xml:space="preserve">
    <value>a0ec0451-1038-4774-99c8-694f07f02a42</value>
    <comment>{locked} This is the file ID for this localization file. This string value should not be used or translated.</comment>
  </data>
  <data name="listSeparator" xml:space="preserve">
    <value>, </value>
    <comment>[Tag:ODSP-SPPPLAT-SPLoader] Separator for a list of elements. Used when loading a list of words in an error or log message.
    The usage is for a list of resources and libraries when an error happens as contextual information.
    Example: Missing dependency "another". Existing dependencies: jquery, jqueryui, moment</comment>
  </data>
  <data name="loadComponentError" xml:space="preserve">
    <value>Failed to load component "{0}" ({1}). Original error: {2}</value>
    <comment>{Locked}An error to show when a component fails to load.
    {0} is the component id, {1} is the component alias, {2} is the original error that caused the failure.</comment>
  </data>
  <data name="loadComponentDependencyError" xml:space="preserve">
    <value>Failed to load component dependency "{0}" from component "{1}" ({2}). Original error: {3}</value>
    <comment>{Locked}An error to show when a component fails to load a component dependency through the failover path.
    {0} is the dependency name, {1} is the component id, {2} is the component alias, {3} is the original error that caused the dependency to fail.</comment>
  </data>
  <data name="loadComponentDependencyFailoverPathError" xml:space="preserve">
    <value>Failed to load component dependency "{0}" with failover path "{1}" from component "{2}" ({3}). Original error: {4}</value>
    <comment>[Tag:ODSP-SPPPLAT-SPLoader] {Locked}An error to show when a component fails to load a component dependency through the failover path.
    {0} is the dependency name, {1} is the failover path, {2} is the component id, {3} is the component alias, {4} is the original error that caused the failure.</comment>
  </data>
  <data name="loadPathDependencyError" xml:space="preserve">
    <value>Failed to load path dependency "{0}" from component "{1}" ({2}). Original error: {3}</value>
    <comment>[Tag:ODSP-SPPPLAT-SPLoader] {Locked}An error to show when a component fails to load a path dependency.
    {0} is the dependency name, {1} is the component id, {2} is the component alias, {3} is the original error that caused the failure.</comment>
  </data>
  <data name="loadPathDependencyBlockedByAnotherDependencyError" xml:space="preserve">
    <value>Failed to load path dependency "{0}" from component "{1}" ({2}) due to another dependency that failed to load.</value>
    <comment>{Locked}An error to show when a component fails to load a path dependency because another dependency failed to load.
    {0} is the dependency name, {1} is the component id, {2} is the component alias.</comment>
  </data>
  <data name="loadEntryPointError" xml:space="preserve">
    <value>Failed to load entry point from component "{0}" ({1}). Original error: {2}</value>
    <comment>[Tag:ODSP-SPPPLAT-SPLoader] {Locked}An error to show when a component fails to load a path dependency.
    {0} is the component id, {1} is the component alias, {2} is the original error that caused the failure.</comment>
  </data>
  <data name="loadComponentReturnsEmptyError" xml:space="preserve">
    <value>loadComponent() returned an empty object for component "{0}" ({1}).</value>
    <comment>{Locked}An error to show when after loading a component, the output is empty.
    {0} is the component id, {1} is the component alias.</comment>
  </data>
  <data name="loadComponentReturnsDefaultEmptyError" xml:space="preserve">
    <value>loadComponent() returned an object with an empty default property for component "{0}" ({1}).</value>
    <comment>{Locked}An error to show when after loading a component, the output has an empty default property.
    {0} is the component id, {1} is the component alias.</comment>
  </data>
  <data name="moduleHasUndeclaredDependencyError" xml:space="preserve">
    <value>The entry point for component "{0}" ({1}) has a dependency on "{2}" that is not declared in the manifest.</value>
    <comment>[Tag:ODSP-SPPPLAT-SPLoader] {Locked}An error to show when the Javascript file declares a dependency not declared in the manifest.
    {0} is the component id, {1} is the component alias, {2} is the dependency name.</comment>
  </data>
  <data name="loadScriptWithStringError" xml:space="preserve">
    <value>loadScript function doesn't allow a string as 2nd parameter. Use ILoadScriptOptions instead.</value>
    <comment>{Locked}An error to show when loadScript is called with 2 parameters and the 2nd is a string.
    This is unsupported and otherwise the system throws a confusing error.</comment>
  </data>
  <data name="urlStatusLocalhostFileNotFoundError" xml:space="preserve">
    <value>Failed to load URL '{3}' for resource '{2}' in component '{0}' ({1}). The file was not found in the server. Make sure that you are running 'gulp serve'.</value>
    <comment>{Locked}An error to show when trying to load a resource from a URL and the HTTP response is Not found (404).
    FOr localhost files we recommend that the user checks that they are running 'gulp serve' (to load files from localhost)
    {0} is the manifest id, {1} is the manifest alias, {2} is the resource name, {3} is the URL</comment>
  </data>
  <data name="urlStatusFileNotFoundError" xml:space="preserve">
    <value>Failed to load URL '{3}' for resource '{2}' in component '{0}' ({1}). The file was not found in the server.</value>
    <comment>{Locked}An error to show when trying to load a resource from a URL and the HTTP response is Not found (404).
    {0} is the manifest id, {1} is the manifest alias, {2} is the resource name, {3} is the URL</comment>
  </data>
  <data name="urlStatusForbiddenError" xml:space="preserve">
    <value>Failed to load URL '{3}' for resource '{2}' in component '{0}' ({1}). The access to the file is forbidden.</value>
    <comment>{Locked}An error to show when trying to load a resource from a URL and the HTTP response is Forbidden (403).
    {0} is the manifest id, {1} is the manifest alias, {2} is the resource name, {3} is the URL</comment>
  </data>
  <data name="urlStatusClientErrorError" xml:space="preserve">
    <value>Failed to load URL '{3}' for resource '{2}' in component '{0}' ({1}). There was an error requesting the file.</value>
    <comment>{Locked}An error to show when trying to load a resource from a URL and the HTTP response is a client error (4xx).
    {0} is the manifest id, {1} is the manifest alias, {2} is the resource name, {3} is the URL</comment>
  </data>
  <data name="urlStatusServerErrorError" xml:space="preserve">
    <value>Failed to load URL '{3}' for resource '{2}' in component '{0}' ({1}). There was a problem in the server.</value>
    <comment>{Locked}An error to show when trying to load a resource from a URL and the HTTP response is a server error (5xx).
    {0} is the manifest id, {1} is the manifest alias, {2} is the resource name, {3} is the URL</comment>
  </data>
  <data name="urlStatusLocalhostNetworkErrorError" xml:space="preserve">
    <value>Failed to load URL '{3}' for resource '{2}' in component '{0}' ({1}). There was a network problem. Make sure that you are running 'gulp serve' and you have run 'gulp trust-dev-cert'.</value>
    <comment>{Locked}An error to show when trying to load a resource from a URL and there are network problems.
    {0} is the manifest id, {1} is the manifest alias, {2} is the resource name, {3} is the URL</comment>
  </data>
  <data name="urlStatusHttpsNetworkErrorError" xml:space="preserve">
    <value>Failed to load URL '{3}' for resource '{2}' in component '{0}' ({1}). There was a network problem. This may be a problem with a HTTPS certificate. Make sure you have the right certificate.</value>
    <comment>{Locked}An error to show when trying to load a resource from a URL and there are network problems.
    {0} is the manifest id, {1} is the manifest alias, {2} is the resource name, {3} is the URL</comment>
  </data>
  <data name="urlStatusNetworkErrorError" xml:space="preserve">
    <value>Failed to load URL '{3}' for resource '{2}' in component '{0}' ({1}). There was a network problem.</value>
    <comment>{Locked}An error to show when trying to load a resource from a URL and there are network problems.
    {0} is the manifest id, {1} is the manifest alias, {2} is the resource name, {3} is the URL</comment>
  </data>
  <data name="urlStatusUndefinedError" xml:space="preserve">
    <value>Failed to load URL '{3}' for resource '{2}' in component '{0}' ({1}) because of unknown problems.</value>
    <comment>{Locked}An error to show when trying to load a resource from a URL and there are problems, but we are unable to identify them.
    {0} is the manifest id, {1} is the manifest alias, {2} is the resource name, {3} is the URL</comment>
  </data>
  <data name="failedToCreateGlobalVariableError" xml:space="preserve">
    <value>Failed to create global variable "{0}" from script "{1}"</value>
    <comment>{Locked}Error to show when a script fails to create a global variable. The {0} placeholder is the global variable name and the {1} placeholder is the script name or URL.</comment>
  </data>
  <data name="dependencyLoadError" xml:space="preserve">
    <value>Failed to load module '{0}' because dependency {1} was not loaded</value>
    <comment>{Locked}Error to show when a required dependency is not loaded. The {0} placeholder is the module being loaded, the {1} placeholder is the dependency that is not available.</comment>
  </data>
  <data name="missingPathDependencyError" xml:space="preserve">
    <value>Missing path dependency "{0}" from component "{1}" ({2}). Existing path dependencies: {3}</value>
    <comment>[Tag:ODSP-SPPPLAT-SPLoader] {Locked}An error to show when a component tries to load a path dependency that doesn't exist.
    {0} is the dependency name, {1} is the component id, {2} is the component alias, {3} is a separated list of existing path dependencies.</comment>
  </data>
</root>