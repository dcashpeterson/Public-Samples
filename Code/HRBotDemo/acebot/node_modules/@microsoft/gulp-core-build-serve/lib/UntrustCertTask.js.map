{"version":3,"file":"UntrustCertTask.js","sourceRoot":"","sources":["../src/UntrustCertTask.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAE3D,gEAA2E;AAC3E,oEAAwD;AACxD,oFAA4F;AAE5F;;;;;;GAMG;AACH,MAAa,eAAgB,SAAQ,0BAAc;IAIjD;QACE,KAAK,CAAC,cAAc,CAAC,CAAC;QAEtB,IAAI,CAAC,iBAAiB,GAAG,IAAI,qCAAmB,CAAC,IAAI,CAAC,CAAC;QACvD,IAAI,CAAC,SAAS,GAAG,IAAI,4BAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACxD,CAAC;IAEM,KAAK,CAAC,WAAW;QACtB,MAAM,kBAAkB,GAAuB,IAAI,8CAAkB,EAAE,CAAC;QACxE,MAAM,iBAAiB,GAAY,MAAM,kBAAkB,CAAC,uBAAuB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACpG,MAAM,gBAAgB,GAAqB,IAAI,4CAAgB,EAAE,CAAC;QAElE,kCAAkC;QAClC,gBAAgB,CAAC,eAAe,GAAG,SAAS,CAAC;QAC7C,gBAAgB,CAAC,OAAO,GAAG,SAAS,CAAC;QAErC,IAAI,CAAC,iBAAiB,EAAE;YACtB,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;SAClD;IACH,CAAC;CACF;AAxBD,0CAwBC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { GulpTask, GCBTerminalProvider } from '@microsoft/gulp-core-build';\r\nimport { Terminal } from '@rushstack/node-core-library';\r\nimport { CertificateStore, CertificateManager } from '@rushstack/debug-certificate-manager';\r\n\r\n/**\r\n * On Windows, this task removes the certificate with the expected serial number from the user's\r\n *  root certification authorities list. On macOS, it finds the SHA signature of the certificate\r\n *  with the expected serial number and then removes that certificate from the keychain. On\r\n *  other platforms, the user must untrust the certificate manually. On all platforms,\r\n *  the certificate and private key are deleted from the user's home directory.\r\n */\r\nexport class UntrustCertTask extends GulpTask<void> {\r\n  private _terminalProvider: GCBTerminalProvider;\r\n  private _terminal: Terminal;\r\n\r\n  public constructor() {\r\n    super('untrust-cert');\r\n\r\n    this._terminalProvider = new GCBTerminalProvider(this);\r\n    this._terminal = new Terminal(this._terminalProvider);\r\n  }\r\n\r\n  public async executeTask(): Promise<void> {\r\n    const certificateManager: CertificateManager = new CertificateManager();\r\n    const untrustCertResult: boolean = await certificateManager.untrustCertificateAsync(this._terminal);\r\n    const certificateStore: CertificateStore = new CertificateStore();\r\n\r\n    // Clear out the certificate store\r\n    certificateStore.certificateData = undefined;\r\n    certificateStore.keyData = undefined;\r\n\r\n    if (!untrustCertResult) {\r\n      throw new Error('Error untrusting certificate.');\r\n    }\r\n  }\r\n}\r\n"]}