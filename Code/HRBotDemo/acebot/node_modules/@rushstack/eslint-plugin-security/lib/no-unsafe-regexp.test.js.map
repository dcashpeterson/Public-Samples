{"version":3,"file":"no-unsafe-regexp.test.js","sourceRoot":"","sources":["../src/no-unsafe-regexp.test.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAE3D,8EAAoE;AACpE,yDAAoD;AAEpD,MAAM,EAAE,UAAU,EAAE,GAAG,gCAAW,CAAC;AACnC,MAAM,UAAU,GAAG,IAAI,UAAU,CAAC;IAChC,MAAM,EAAE,2BAA2B;CACpC,CAAC,CAAC;AAEH,UAAU,CAAC,GAAG,CAAC,kBAAkB,EAAE,iCAAc,EAAE;IACjD,OAAO,EAAE;QACP;YACE,kBAAkB;YAClB,IAAI,EAAE;gBACJ,yBAAyB;gBACzB,6BAA6B;gBAC7B,GAAG;aACJ,CAAC,IAAI,CAAC,IAAI,CAAC;YACZ,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,qBAAqB,EAAE,CAAC;SAC/C;KACF;IACD,KAAK,EAAE;QACL;YACE,IAAI,EAAE,8BAA8B;SACrC;KACF;CACF,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { ESLintUtils } from '@typescript-eslint/experimental-utils';\r\nimport { noUnsafeRegExp } from './no-unsafe-regexp';\r\n\r\nconst { RuleTester } = ESLintUtils;\r\nconst ruleTester = new RuleTester({\r\n  parser: '@typescript-eslint/parser'\r\n});\r\n\r\nruleTester.run('no-unsafe-regexp', noUnsafeRegExp, {\r\n  invalid: [\r\n    {\r\n      // prettier-ignore\r\n      code: [\r\n        'function f(s: string) {',\r\n        '  const r1 = new RegExp(s);',\r\n        '}'\r\n      ].join('\\n'),\r\n      errors: [{ messageId: 'error-unsafe-regexp' }]\r\n    }\r\n  ],\r\n  valid: [\r\n    {\r\n      code: 'const r1 = new RegExp(\".*\");'\r\n    }\r\n  ]\r\n});\r\n"]}