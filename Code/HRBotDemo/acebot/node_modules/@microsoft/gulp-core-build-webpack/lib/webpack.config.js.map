{"version":3,"file":"webpack.config.js","sourceRoot":"","sources":["../src/webpack.config.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAM3D,6BAA6B;AAE7B,mHAAmH;AACnH,MAAM,WAAW,GAAgB,OAAO,CAAC,8BAA8B,CAAC,CAAC,OAAO,CAAC;AACjF,MAAM,OAAO,GAAmB,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC;AAE9D,MAAM,YAAY,GAAY,WAAW,CAAC,WAAW,CAAC,UAAU,CAAC;AAEjE,2BAA2B;AAC3B,MAAM,WAAW,GAAqB,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAEhE,MAAM,oBAAoB,GAA0B;IAClD,OAAO,EAAE,SAAS;IAClB,OAAO,EAAE,YAAY,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,YAAY;IAEhD,KAAK,EAAE;QACL,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC,WAAW,CAAC,SAAS,EAAE,UAAU,CAAC;KACxF;IAED,MAAM,EAAE;QACN,aAAa,EAAE,KAAK;QACpB,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC,WAAW,CAAC,UAAU,CAAC;QAC9D,QAAQ,EAAE,SAAS,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK;KACnD;IAED,4GAA4G;IAC5G,SAAS,EAAE;QACT,KAAK,EAAE;YACL,GAAG,EAAE,OAAO;YACZ,QAAQ,EAAE,OAAO;SAClB;QACD,WAAW,EAAE;YACX,GAAG,EAAE,WAAW;YAChB,QAAQ,EAAE,WAAW;SACtB;KACK;IAER,OAAO,EAAE;IACP,8BAA8B;KAC/B;CACF,CAAC;AAEF,IAAI,YAAY,IAAI,oBAAoB,CAAC,OAAO,EAAE;IAChD,oBAAoB,CAAC,OAAO,CAAC,IAAI,CAC/B,IAAI,OAAO,CAAC,QAAQ,CAAC,cAAc,CAAC;QAClC,MAAM,EAAE,IAAI;QACZ,QAAQ,EAAE;YACR,SAAS,EAAE,IAAI;YACf,QAAQ,EAAE,KAAK;SAChB;KACF,CAAC,CACH,CAAC;CACH;AAED,OAAO,GAAG,oBAAoB,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as Webpack from 'webpack';\r\n// @ts-ignore\r\nimport * as WebpackDevServer from 'webpack-dev-server'; // eslint-disable-line\r\nimport { WebpackTask } from './WebpackTask';\r\nimport * as path from 'path';\r\n\r\n// Note: this require may need to be fixed to point to the build that exports the gulp-core-build-webpack instance.\r\nconst webpackTask: WebpackTask = require('@microsoft/web-library-build').webpack;\r\nconst webpack: typeof Webpack = webpackTask.resources.webpack;\r\n\r\nconst isProduction: boolean = webpackTask.buildConfig.production;\r\n\r\n// eslint-disable-next-line\r\nconst packageJSON: { name: string } = require('./package.json');\r\n\r\nconst webpackConfiguration: Webpack.Configuration = {\r\n  context: __dirname,\r\n  devtool: isProduction ? undefined : 'source-map',\r\n\r\n  entry: {\r\n    [packageJSON.name]: path.join(__dirname, webpackTask.buildConfig.libFolder, 'index.js')\r\n  },\r\n\r\n  output: {\r\n    libraryTarget: 'umd',\r\n    path: path.join(__dirname, webpackTask.buildConfig.distFolder),\r\n    filename: `[name]${isProduction ? '.min' : ''}.js`\r\n  },\r\n\r\n  // The typings are missing the \"object\" option here (https://webpack.js.org/configuration/externals/#object)\r\n  externals: {\r\n    react: {\r\n      amd: 'react',\r\n      commonjs: 'react'\r\n    },\r\n    'react-dom': {\r\n      amd: 'react-dom',\r\n      commonjs: 'react-dom'\r\n    }\r\n  } as any, // eslint-disable-line @typescript-eslint/no-explicit-any\r\n\r\n  plugins: [\r\n    // new WebpackNotifierPlugin()\r\n  ]\r\n};\r\n\r\nif (isProduction && webpackConfiguration.plugins) {\r\n  webpackConfiguration.plugins.push(\r\n    new webpack.optimize.UglifyJsPlugin({\r\n      mangle: true,\r\n      compress: {\r\n        dead_code: true,\r\n        warnings: false\r\n      }\r\n    })\r\n  );\r\n}\r\n\r\nexports = webpackConfiguration;\r\n"]}