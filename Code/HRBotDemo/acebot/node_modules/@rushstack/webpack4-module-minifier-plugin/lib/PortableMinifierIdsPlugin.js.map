{"version":3,"file":"PortableMinifierIdsPlugin.js","sourceRoot":"","sources":["../src/PortableMinifierIdsPlugin.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport type { Compiler, Plugin } from 'webpack';\nimport type webpack from 'webpack';\nimport type { ReplaceSource } from 'webpack-sources';\nimport { createHash } from 'crypto';\nimport type { TapOptions } from 'tapable';\nimport RequestShortener from 'webpack/lib/RequestShortener';\n\nimport { STAGE_AFTER, STAGE_BEFORE } from './Constants';\nimport type {\n  _INormalModuleFactoryModuleData,\n  IExtendedModule,\n  IModuleMinifierPluginHooks,\n  _IWebpackCompilationData,\n  IPostProcessFragmentContext\n} from './ModuleMinifierPlugin.types';\n\nconst PLUGIN_NAME: 'PortableMinifierModuleIdsPlugin' = 'PortableMinifierModuleIdsPlugin';\n\nconst TAP_BEFORE: TapOptions<'sync'> = {\n  name: PLUGIN_NAME,\n  stage: STAGE_BEFORE\n};\n\nconst TAP_AFTER: TapOptions<'sync'> = {\n  name: PLUGIN_NAME,\n  stage: STAGE_AFTER\n};\n\nconst STABLE_MODULE_ID_PREFIX: '__MODULEID_SHA_' = '__MODULEID_SHA_';\n// The negative lookback here is to ensure that this regex does not match an async import placeholder\nconst STABLE_MODULE_ID_REGEX: RegExp = /(?<!C)['\"]?(__MODULEID_SHA_[0-9a-f]+)['\"]?/g;\n\n/**\n * Plugin responsible for converting the Webpack module ids (of whatever variety) to stable ids before code is handed to the minifier, then back again.\n * Uses the node module identity of the target module. Will emit an error if it encounters multiple versions of the same package in the same compilation.\n * @public\n */\nexport class PortableMinifierModuleIdsPlugin implements Plugin {\n  private readonly _minifierHooks: IModuleMinifierPluginHooks;\n\n  public constructor(minifierHooks: IModuleMinifierPluginHooks) {\n    this._minifierHooks = minifierHooks;\n  }\n\n  public apply(compiler: Compiler): void {\n    // Ensure that \"EXTERNAL MODULE: \" comments are portable and module version invariant\n    const baseShorten: (request: string) => string = RequestShortener.prototype.shorten;\n    RequestShortener.prototype.shorten = function (this: RequestShortener, request: string): string {\n      const baseResult: string = baseShorten.call(this, request);\n      const nodeModules: '/node_modules/' = '/node_modules/';\n\n      if (!baseResult) {\n        return baseResult;\n      }\n\n      const nodeModulesIndex: number = baseResult.lastIndexOf(nodeModules);\n      if (nodeModulesIndex < 0) {\n        return baseResult;\n      }\n\n      const nodeModulePath: string = baseResult.slice(nodeModulesIndex + nodeModules.length);\n      this.cache.set(request, nodeModulePath);\n      return nodeModulePath;\n    };\n\n    const stableIdToFinalId: Map<string | number, string | number> = new Map();\n\n    this._minifierHooks.finalModuleId.tap(PLUGIN_NAME, (id: string | number | undefined) => {\n      return id === undefined ? id : stableIdToFinalId.get(id);\n    });\n\n    this._minifierHooks.postProcessCodeFragment.tap(\n      PLUGIN_NAME,\n      (source: ReplaceSource, context: IPostProcessFragmentContext) => {\n        const code: string = source.original().source() as string;\n\n        STABLE_MODULE_ID_REGEX.lastIndex = -1;\n        // RegExp.exec uses null or an array as the return type, explicitly\n        let match: RegExpExecArray | null = null;\n        while ((match = STABLE_MODULE_ID_REGEX.exec(code))) {\n          const id: string = match[1];\n          const mapped: string | number | undefined = this._minifierHooks.finalModuleId.call(\n            id,\n            context.compilation\n          );\n\n          if (mapped === undefined) {\n            context.compilation.errors.push(\n              new Error(`Missing module id for ${id} in ${context.loggingName}!`)\n            );\n          }\n\n          source.replace(match.index, STABLE_MODULE_ID_REGEX.lastIndex - 1, JSON.stringify(mapped));\n        }\n\n        return source;\n      }\n    );\n\n    compiler.hooks.thisCompilation.tap(\n      PLUGIN_NAME,\n      (compilation: webpack.compilation.Compilation, compilationData: _IWebpackCompilationData) => {\n        const { normalModuleFactory } = compilationData;\n\n        normalModuleFactory.hooks.module.tap(\n          PLUGIN_NAME,\n          (mod: IExtendedModule, data: _INormalModuleFactoryModuleData) => {\n            const { resourceResolveData: resolveData } = data;\n\n            if (resolveData) {\n              mod.factoryMeta.resolveData = resolveData;\n              return;\n            }\n\n            // eslint-disable-next-line no-console\n            console.error(`Missing resolution data for ${mod.resource}`);\n          }\n        );\n\n        compilation.hooks.succeedModule.tap(PLUGIN_NAME, (mod: webpack.compilation.Module) => {\n          const { resolveData } = mod.factoryMeta;\n\n          if (!resolveData) {\n            return;\n          }\n\n          const { descriptionFileData: packageJson, relativePath } = resolveData;\n\n          if (packageJson && relativePath) {\n            const nodeId: string = `${packageJson.name}${relativePath.slice(1).replace(/\\.js(on)?$/, '')}`;\n            mod.factoryMeta.nodeResource = nodeId;\n          }\n        });\n\n        stableIdToFinalId.clear();\n\n        // Make module ids a pure function of the file path immediately before rendering.\n        // Unfortunately, other means of altering these ids don't work in Webpack 4 without a lot more code and work.\n        // Namely, a number of functions reference \"module.id\" directly during code generation\n\n        compilation.hooks.beforeChunkAssets.tap(TAP_AFTER, () => {\n          // For tracking collisions\n          const resourceById: Map<string | number, string> = new Map();\n\n          for (const mod of compilation.modules) {\n            const originalId: string | number = mod.id;\n\n            // Need different cache keys for different sets of loaders, so can't use 'resource'\n            const identity: string = mod.identifier();\n            const hashId: string = createHash('sha256').update(identity).digest('hex');\n\n            // This is designed to be an easily regex-findable string\n            const stableId: string = `${STABLE_MODULE_ID_PREFIX}${hashId}`;\n            const existingResource: string | undefined = resourceById.get(stableId);\n\n            if (existingResource) {\n              compilation.errors.push(\n                new Error(\n                  `Module id collision for ${identity} with ${existingResource}.\\n This means you are bundling multiple versions of the same module.`\n                )\n              );\n            }\n\n            stableIdToFinalId.set(stableId, originalId);\n\n            // Record to detect collisions\n            resourceById.set(stableId, identity);\n            mod.id = stableId;\n          }\n        });\n\n        // This is the hook immediately following chunk asset rendering. Fix the module ids.\n        compilation.hooks.additionalChunkAssets.tap(TAP_BEFORE, () => {\n          // Restore module ids in case any later hooks need them\n          for (const mod of compilation.modules) {\n            const stableId: string | number = mod.id;\n            const finalId: string | number | undefined = stableIdToFinalId.get(stableId);\n            if (finalId !== undefined) {\n              mod.id = finalId;\n            }\n          }\n        });\n      }\n    );\n  }\n}\n"]}