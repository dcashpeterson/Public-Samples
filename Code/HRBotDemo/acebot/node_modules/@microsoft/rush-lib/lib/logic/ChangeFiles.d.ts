import type { IChangelog } from '../api/Changelog';
import type { RushConfiguration } from '../api/RushConfiguration';
/**
 * This class represents the collection of change files existing in the repo and provides operations
 * for those change files.
 */
export declare class ChangeFiles {
    /**
     * Change file path relative to changes folder.
     */
    private _files;
    private _changesPath;
    constructor(changesPath: string);
    /**
     * Validate if the newly added change files match the changed packages.
     */
    static validate(newChangeFilePaths: string[], changedPackages: string[], rushConfiguration: RushConfiguration): void;
    static getChangeComments(newChangeFilePaths: string[]): Map<string, string[]>;
    /**
     * Get the array of absolute paths of change files.
     */
    getFilesAsync(): Promise<string[]>;
    /**
     * Get the path of changes folder.
     */
    getChangesPath(): string;
    /**
     * Delete all change files
     */
    deleteAllAsync(shouldDelete: boolean, updatedChangelogs?: IChangelog[]): Promise<number>;
    private _deleteFilesAsync;
}
//# sourceMappingURL=ChangeFiles.d.ts.map