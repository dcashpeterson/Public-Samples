"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
Object.defineProperty(exports, "__esModule", { value: true });
exports.UntrustCertTask = void 0;
const gulp_core_build_1 = require("@microsoft/gulp-core-build");
const node_core_library_1 = require("@rushstack/node-core-library");
const debug_certificate_manager_1 = require("@rushstack/debug-certificate-manager");
/**
 * On Windows, this task removes the certificate with the expected serial number from the user's
 *  root certification authorities list. On macOS, it finds the SHA signature of the certificate
 *  with the expected serial number and then removes that certificate from the keychain. On
 *  other platforms, the user must untrust the certificate manually. On all platforms,
 *  the certificate and private key are deleted from the user's home directory.
 */
class UntrustCertTask extends gulp_core_build_1.GulpTask {
    constructor() {
        super('untrust-cert');
        this._terminalProvider = new gulp_core_build_1.GCBTerminalProvider(this);
        this._terminal = new node_core_library_1.Terminal(this._terminalProvider);
    }
    async executeTask() {
        const certificateManager = new debug_certificate_manager_1.CertificateManager();
        const untrustCertResult = await certificateManager.untrustCertificateAsync(this._terminal);
        const certificateStore = new debug_certificate_manager_1.CertificateStore();
        // Clear out the certificate store
        certificateStore.certificateData = undefined;
        certificateStore.keyData = undefined;
        if (!untrustCertResult) {
            throw new Error('Error untrusting certificate.');
        }
    }
}
exports.UntrustCertTask = UntrustCertTask;
//# sourceMappingURL=UntrustCertTask.js.map