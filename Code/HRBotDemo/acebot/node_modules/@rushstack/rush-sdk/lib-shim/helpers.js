"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.requireRushLibUnderFolderPath = exports._require = exports.tryFindRushJsonLocation = exports.sdkContext = exports.RUSH_LIB_PATH_ENV_VAR_NAME = exports.RUSH_LIB_NAME = void 0;
const path = __importStar(require("path"));
const node_core_library_1 = require("@rushstack/node-core-library");
exports.RUSH_LIB_NAME = '@microsoft/rush-lib';
exports.RUSH_LIB_PATH_ENV_VAR_NAME = '_RUSH_LIB_PATH';
exports.sdkContext = {
    rushLibModule: undefined
};
/**
 * Find the rush.json location and return the path, or undefined if a rush.json can't be found.
 *
 * @privateRemarks
 * Keep this in sync with `RushConfiguration.tryFindRushJsonLocation`.
 */
function tryFindRushJsonLocation(startingFolder) {
    let currentFolder = startingFolder;
    // Look upwards at parent folders until we find a folder containing rush.json
    for (let i = 0; i < 10; ++i) {
        const rushJsonFilename = path.join(currentFolder, 'rush.json');
        if (node_core_library_1.FileSystem.exists(rushJsonFilename)) {
            return rushJsonFilename;
        }
        const parentFolder = path.dirname(currentFolder);
        if (parentFolder === currentFolder) {
            break;
        }
        currentFolder = parentFolder;
    }
    return undefined;
}
exports.tryFindRushJsonLocation = tryFindRushJsonLocation;
function _require(moduleName) {
    if (typeof __non_webpack_require__ === 'function') {
        // If this library has been bundled with Webpack, we need to call the real `require` function
        // that doesn't get turned into a `__webpack_require__` statement.
        // `__non_webpack_require__` is a Webpack macro that gets turned into a `require` statement
        // during bundling.
        return __non_webpack_require__(moduleName);
    }
    else {
        return require(moduleName);
    }
}
exports._require = _require;
/**
 * Require `@microsoft/rush-lib` under the specified folder path.
 */
function requireRushLibUnderFolderPath(folderPath) {
    const rushLibModulePath = node_core_library_1.Import.resolveModule({
        modulePath: exports.RUSH_LIB_NAME,
        baseFolderPath: folderPath
    });
    return _require(rushLibModulePath);
}
exports.requireRushLibUnderFolderPath = requireRushLibUnderFolderPath;
//# sourceMappingURL=helpers.js.map