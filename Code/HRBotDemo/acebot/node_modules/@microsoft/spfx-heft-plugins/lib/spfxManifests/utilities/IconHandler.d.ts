import type * as webpack from 'webpack';
import { type ITerminal } from '@rushstack/node-core-library';
/**
 * @internal
 * The type of icon URL defined in a user-created manifest.
 */
export declare enum IconPathType {
    /**
     * Something that doesn't fit into another category. A warning will be printed.
     */
    Malformed = 0,
    /**
     * An absolute URL. Something that begins with a protocol (i.e. - http://...).
     */
    AbsoluteUrl = 1,
    /**
     * A relative URL. Something that begins with an alphanumeric character, but doesn't look like a protocol.
     */
    RelativeUrl = 2,
    /**
     * A relative filesystem path. Something that begins with "./" or "../"
     */
    RelativePath = 3,
    /**
     * A data:image;... url
     */
    DataUrl = 4
}
/**
 * @internal
 */
export declare class IconHandler {
    static getIconPathType(iconPath: string | undefined): IconPathType | undefined;
    static processIconPath(terminal: ITerminal, compilation: webpack.compilation.Compilation, manifestPath: string, iconPath: string | undefined): string | undefined;
}
//# sourceMappingURL=IconHandler.d.ts.map