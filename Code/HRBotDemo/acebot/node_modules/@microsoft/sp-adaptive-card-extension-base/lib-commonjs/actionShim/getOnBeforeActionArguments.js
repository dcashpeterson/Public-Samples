"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getOnBeforeActionArguments = void 0;
var tslib_1 = require("tslib");
/**
 * @internal
 */
function getOnBeforeActionArguments(actionType, action, data) {
    var _a;
    if (actionType === 'Action.OpenUrl') {
        return {
            type: 'ExternalLink',
            /**
             * {@link ICardButton.IExternalLinkParameters.target} value will always be a string.
             */
            url: action.url
        };
    }
    else if (actionType === 'Action.Submit') {
        var qvData = action.data;
        if (qvData && qvData._internalQuickViewId) {
            return {
                type: 'QuickView',
                viewId: qvData._internalQuickViewId,
                data: data
            };
        }
        else {
            return {
                id: action.id,
                data: tslib_1.__assign(tslib_1.__assign({}, action.data), data),
                type: 'Submit'
            };
        }
    }
    else if (actionType === 'Action.Execute') {
        return {
            id: action.id,
            data: tslib_1.__assign(tslib_1.__assign({}, action.data), data),
            verb: action.verb,
            type: 'Execute'
        };
    }
    else if (actionType === 'Action.ShowCard') {
        return {
            id: action.id,
            type: 'ShowCard'
        };
    }
    else if (actionType === 'VivaAction.ShowLocation') {
        var params = {
            locationCoordinates: (_a = action.parameters) === null || _a === void 0 ? void 0 : _a.locationCoordinates
        };
        return {
            type: 'VivaAction.ShowLocation',
            parameters: params
        };
    }
    else {
        // 'VivaAction.GetLocation' and 'VivaAction.SelectMedia' handles creating their own action arguments.
        return undefined;
    }
}
exports.getOnBeforeActionArguments = getOnBeforeActionArguments;
//# sourceMappingURL=getOnBeforeActionArguments.js.map