"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.initialize = exports.rig = exports.untrustDevCert = exports.trustDevCert = exports.reload = void 0;
__exportStar(require("@microsoft/gulp-core-build-sass"), exports);
__exportStar(require("@microsoft/gulp-core-build-typescript"), exports);
// Don't export "serve" from GCB-serve. Export it from sp-build-core-tasks
var gulp_core_build_serve_1 = require("@microsoft/gulp-core-build-serve");
Object.defineProperty(exports, "reload", { enumerable: true, get: function () { return gulp_core_build_serve_1.reload; } });
Object.defineProperty(exports, "trustDevCert", { enumerable: true, get: function () { return gulp_core_build_serve_1.trustDevCert; } });
Object.defineProperty(exports, "untrustDevCert", { enumerable: true, get: function () { return gulp_core_build_serve_1.untrustDevCert; } });
__exportStar(require("@microsoft/gulp-core-build-webpack"), exports);
__exportStar(require("@microsoft/sp-build-core-tasks/lib/index"), exports);
__exportStar(require("@microsoft/gulp-core-build"), exports);
__exportStar(require("./SPWebBuildRig"), exports);
__exportStar(require("./WebBuildRigConstants"), exports);
__exportStar(require("./SPBuildRig"), exports);
const SPWebBuildRig_1 = require("./SPWebBuildRig");
exports.rig = new SPWebBuildRig_1.SPWebBuildRig();
// Replace gcb.initialize to call our init stuff first.
const initialize = (gulp) => {
    exports.rig.initialize(gulp);
    return exports.rig;
};
exports.initialize = initialize;
//# sourceMappingURL=index.js.map