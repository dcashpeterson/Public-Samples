"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports._footerConfigurationToFooterParameters = exports.TextInputImageCardView = exports.TextInputCardView = exports.ImageCardView = exports.PrimaryTextCardView = exports.BasicCardView = void 0;
var CardBarComponent_1 = require("../../../components/CardBarComponent");
var CardButtonComponent_1 = require("../../../components/CardButtonComponent");
var TextComponent_1 = require("../../../components/TextComponent");
var TextInputComponent_1 = require("../../../components/TextInputComponent");
/**
 * Helper method to create a Basic Card View.
 * @param configuration - basic card view configuration.
 *
 * @public
 */
function BasicCardView(configuration) {
    var cardBar = configuration.cardBar, header = configuration.header, footer = configuration.footer;
    return {
        cardViewType: 'text',
        image: undefined,
        body: undefined,
        cardBar: [(0, CardBarComponent_1._cardViewBarConfigurationToParameters)(cardBar)],
        header: [(0, TextComponent_1._textConfigurationToParameters)(header)],
        footer: _footerConfigurationToFooterParameters(footer)
    };
}
exports.BasicCardView = BasicCardView;
/**
 * Helper method to create a Primary Text Card View.
 * @param configuration - primary text card view configuration.
 *
 * @public
 */
function PrimaryTextCardView(configuration) {
    var cardBar = configuration.cardBar, header = configuration.header, body = configuration.body, footer = configuration.footer;
    return {
        cardViewType: 'text',
        image: undefined,
        cardBar: [(0, CardBarComponent_1._cardViewBarConfigurationToParameters)(cardBar)],
        header: [(0, TextComponent_1._textConfigurationToParameters)(header)],
        body: [(0, TextComponent_1._textConfigurationToParameters)(body)],
        footer: _footerConfigurationToFooterParameters(footer)
    };
}
exports.PrimaryTextCardView = PrimaryTextCardView;
/**
 * Helper method to create an Image Card View.
 * @param configuration - image card view configuration.
 *
 * @public
 */
function ImageCardView(configuration) {
    var image = configuration.image, cardBar = configuration.cardBar, header = configuration.header, footer = configuration.footer;
    return {
        cardViewType: 'text',
        image: image,
        cardBar: [(0, CardBarComponent_1._cardViewBarConfigurationToParameters)(cardBar)],
        header: [(0, TextComponent_1._textConfigurationToParameters)(header)],
        body: undefined,
        footer: _footerConfigurationToFooterParameters(footer)
    };
}
exports.ImageCardView = ImageCardView;
/**
 * Helper method to create an Text Input Card View.
 * @param configuration - text input card view configuration.
 *
 * @public
 */
function TextInputCardView(configuration) {
    var cardBar = configuration.cardBar, header = configuration.header, body = configuration.body, footer = configuration.footer;
    return {
        cardViewType: 'textInput',
        image: undefined,
        cardBar: [(0, CardBarComponent_1._cardViewBarConfigurationToParameters)(cardBar)],
        header: [(0, TextComponent_1._textConfigurationToParameters)(header)],
        body: [(0, TextInputComponent_1._textInputConfigurationToParameters)(body)],
        footer: _footerConfigurationToFooterParameters(footer)
    };
}
exports.TextInputCardView = TextInputCardView;
/**
 * Helper method to create an Text Input with Image Card View.
 * @param configuration - text input with image card view configuration.
 *
 * @public
 */
function TextInputImageCardView(configuration) {
    var cardBar = configuration.cardBar, header = configuration.header, body = configuration.body, footer = configuration.footer, image = configuration.image;
    return {
        cardViewType: 'textInput',
        image: image,
        cardBar: [(0, CardBarComponent_1._cardViewBarConfigurationToParameters)(cardBar)],
        header: [(0, TextComponent_1._textConfigurationToParameters)(header)],
        body: [(0, TextInputComponent_1._textInputConfigurationToParameters)(body)],
        footer: _footerConfigurationToFooterParameters(footer)
    };
}
exports.TextInputImageCardView = TextInputImageCardView;
/**
 * Transforms basic templates footer configuration to footer parameters.
 *
 * @internal
 */
function _footerConfigurationToFooterParameters(configuration) {
    //
    // In future we may want to validate footer configuration to avoid developers to provide disallowed components.
    // For example, they could do something like footer: [SomeUnsupportedComponent] as any
    //
    if (!configuration) {
        return undefined;
    }
    if (Array.isArray(configuration)) {
        return configuration.map(function (buttonConfiguration) {
            // we know for sure that array items are buttons here
            return (0, CardButtonComponent_1._cardButtonConfigurationToParameters)(buttonConfiguration);
        });
    }
    if (configuration.componentName === 'textInput') {
        return [(0, TextInputComponent_1._textInputConfigurationToParameters)(configuration)];
    }
    return [(0, CardButtonComponent_1._cardButtonConfigurationToParameters)(configuration)];
}
exports._footerConfigurationToFooterParameters = _footerConfigurationToFooterParameters;
//# sourceMappingURL=GenericTemplates.js.map