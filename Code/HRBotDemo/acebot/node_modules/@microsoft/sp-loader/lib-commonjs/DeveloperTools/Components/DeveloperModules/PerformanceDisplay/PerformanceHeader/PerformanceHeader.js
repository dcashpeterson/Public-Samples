"use strict";
/**
 *
 * Sub-component for PerformanceDisplay. This component gives an overview of the performance data
 * that is detailed in the graph.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var sp_core_library_1 = require("@microsoft/sp-core-library");
var PerformanceLegend_1 = tslib_1.__importDefault(require("./PerformanceLegend/PerformanceLegend"));
var PerformanceHeader_module_scss_1 = tslib_1.__importDefault(require("./PerformanceHeader.module.scss"));
var PerformanceDisplay_resx_1 = tslib_1.__importDefault(require("../PerformanceDisplay.resx"));
var PerformanceHeader = /** @class */ (function (_super) {
    tslib_1.__extends(PerformanceHeader, _super);
    function PerformanceHeader(props) {
        var _this = _super.call(this, props) || this;
        /**
         * Time from navigation start to headStart marker
         */
        _this._headStart = 0;
        /**
         * Time to exeute <head></head> section.
         */
        _this._headTime = 0;
        /**
         * Time spent by browser waiting for <body></body> section to arrive once <head></head> is done by headEnd time.
         * This wait is dependent on _serverResponse vs _headTime.
         */
        _this._serverResponseWait = 0;
        /**
         * Time taken to start the app once head is executed as well _serverResponseWait is over if any.
         * Essentially time between bodyStart to appStart marker.
         *
         */
        _this._appStart = 0;
        /**
         * Time taken to render the page on client side.
         */
        _this._renderPageDuration = 0;
        /**
         * Time taken to render web parts.
         */
        _this._renderWebparts = 0;
        _this._hasWebParts = false;
        _this._getPerfTimings = _this._getPerfTimings.bind(_this);
        return _this;
    }
    PerformanceHeader.prototype.render = function () {
        this._getPerfTimings();
        // The legend has information about breakdown of webpart loading data
        // We only need to show it if there is web part data on the graph
        var legend = undefined;
        if (this._hasWebParts) {
            legend = React.createElement(PerformanceLegend_1.default, null);
        }
        var tableStyle = [PerformanceHeader_module_scss_1.default.headerTable, PerformanceHeader_module_scss_1.default.msThemeLighter].join(' ');
        return (React.createElement("div", null,
            React.createElement("table", { className: tableStyle },
                React.createElement("thead", null,
                    React.createElement("tr", null,
                        React.createElement("th", { className: PerformanceHeader_module_scss_1.default.headerTableRows, title: PerformanceDisplay_resx_1.default.TotalRenderTimeTooltip }, PerformanceDisplay_resx_1.default.TotalRenderTimeLabel),
                        this.props.timeToInteractive && (React.createElement("th", { className: PerformanceHeader_module_scss_1.default.headerTableRows, title: PerformanceDisplay_resx_1.default.TimeToInteractiveTooltip }, PerformanceDisplay_resx_1.default.TimeToInteractiveLabel)),
                        this.props.speedOfLight && (React.createElement("th", { className: PerformanceHeader_module_scss_1.default.headerTableRows }, PerformanceDisplay_resx_1.default.SpeedOfLightLabel)),
                        this.props.clientBuildVersion && (React.createElement("th", { className: PerformanceHeader_module_scss_1.default.headerTableRows }, PerformanceDisplay_resx_1.default.ClientBuildVersion)),
                        this.props.spoVersion && React.createElement("th", { className: PerformanceHeader_module_scss_1.default.headerTableRows }, PerformanceDisplay_resx_1.default.SPOVersion),
                        this.props.CDNStatus && React.createElement("th", { className: PerformanceHeader_module_scss_1.default.headerTableRows }, PerformanceDisplay_resx_1.default.CDNStatus),
                        this.props.correlationId && (React.createElement("th", { className: PerformanceHeader_module_scss_1.default.headerTableRows }, PerformanceDisplay_resx_1.default.CorrelationId)))),
                React.createElement("tbody", null,
                    React.createElement("tr", null,
                        React.createElement("td", { className: PerformanceHeader_module_scss_1.default.headerTableRows }, sp_core_library_1.Text.format(PerformanceDisplay_resx_1.default.MillisecondsUnitLabel, this.props.overallDuration)),
                        this.props.timeToInteractive && (React.createElement("td", { className: PerformanceHeader_module_scss_1.default.headerTableRows }, sp_core_library_1.Text.format(PerformanceDisplay_resx_1.default.MillisecondsUnitLabel, this.props.timeToInteractive))),
                        this.props.speedOfLight && (React.createElement("td", { className: PerformanceHeader_module_scss_1.default.headerTableRows }, sp_core_library_1.Text.format(PerformanceDisplay_resx_1.default.MillisecondsUnitLabel, this.props.speedOfLight))),
                        this.props.clientBuildVersion && (React.createElement("td", { className: PerformanceHeader_module_scss_1.default.headerTableRows }, this.props.clientBuildVersion)),
                        this.props.spoVersion && React.createElement("td", { className: PerformanceHeader_module_scss_1.default.headerTableRows }, this.props.spoVersion),
                        this.props.CDNStatus && React.createElement("td", { className: PerformanceHeader_module_scss_1.default.headerTableRows }, this.props.CDNStatus),
                        this.props.correlationId && (React.createElement("td", { className: PerformanceHeader_module_scss_1.default.headerTableRows }, this.props.correlationId))))),
            React.createElement("table", { className: tableStyle },
                React.createElement("thead", null,
                    React.createElement("tr", null,
                        this.props.firstFlushDuration && (React.createElement("th", { className: PerformanceHeader_module_scss_1.default.headerTableRows }, PerformanceDisplay_resx_1.default.FirstFlushLabel)),
                        this._headStart && React.createElement("th", { className: PerformanceHeader_module_scss_1.default.headerTableRows }, PerformanceDisplay_resx_1.default.HeadStartLabel),
                        this._headTime && React.createElement("th", { className: PerformanceHeader_module_scss_1.default.headerTableRows }, PerformanceDisplay_resx_1.default.HeadLabel),
                        this.props.serverDuration && (React.createElement("th", { className: PerformanceHeader_module_scss_1.default.headerTableRows }, PerformanceDisplay_resx_1.default.ServerResponseLabel)),
                        this._serverResponseWait !== undefined && (React.createElement("th", { className: PerformanceHeader_module_scss_1.default.headerTableRows }, PerformanceDisplay_resx_1.default.ServerResponseWaitLabel)),
                        this._appStart && React.createElement("th", { className: PerformanceHeader_module_scss_1.default.headerTableRows }, PerformanceDisplay_resx_1.default.AppLoadLabel),
                        this._renderPageDuration && (React.createElement("th", { className: PerformanceHeader_module_scss_1.default.headerTableRows }, PerformanceDisplay_resx_1.default.PageRenderLabel)),
                        this._hasWebParts && React.createElement("th", { className: PerformanceHeader_module_scss_1.default.headerTableRows }, PerformanceDisplay_resx_1.default.RenderWebPartsLabel),
                        this.props.postFlush && React.createElement("th", { className: PerformanceHeader_module_scss_1.default.headerTableRows }, PerformanceDisplay_resx_1.default.PostFlushLabel))),
                React.createElement("tbody", null,
                    React.createElement("tr", null,
                        this.props.firstFlushDuration && (React.createElement("td", { className: PerformanceHeader_module_scss_1.default.headerTableRows }, sp_core_library_1.Text.format(PerformanceDisplay_resx_1.default.MillisecondsUnitLabel, this.props.firstFlushDuration))),
                        this._headStart && (React.createElement("td", { className: PerformanceHeader_module_scss_1.default.headerTableRows }, sp_core_library_1.Text.format(PerformanceDisplay_resx_1.default.MillisecondsUnitLabel, this._headStart))),
                        this._headTime && (React.createElement("td", { className: PerformanceHeader_module_scss_1.default.headerTableRows }, sp_core_library_1.Text.format(PerformanceDisplay_resx_1.default.MillisecondsUnitLabel, this._headTime))),
                        this.props.serverDuration && (React.createElement("td", { className: PerformanceHeader_module_scss_1.default.headerTableRows }, sp_core_library_1.Text.format(PerformanceDisplay_resx_1.default.MillisecondsUnitLabel, this.props.serverDuration))),
                        this._serverResponseWait !== undefined && (React.createElement("td", { className: PerformanceHeader_module_scss_1.default.headerTableRows }, sp_core_library_1.Text.format(PerformanceDisplay_resx_1.default.MillisecondsUnitLabel, this._serverResponseWait))),
                        this._appStart && (React.createElement("td", { className: PerformanceHeader_module_scss_1.default.headerTableRows }, sp_core_library_1.Text.format(PerformanceDisplay_resx_1.default.MillisecondsUnitLabel, this._appStart))),
                        this._renderPageDuration && (React.createElement("td", { className: PerformanceHeader_module_scss_1.default.headerTableRows }, sp_core_library_1.Text.format(PerformanceDisplay_resx_1.default.MillisecondsUnitLabel, this._renderPageDuration))),
                        this._renderWebparts && (React.createElement("td", { className: PerformanceHeader_module_scss_1.default.headerTableRows }, sp_core_library_1.Text.format(PerformanceDisplay_resx_1.default.MillisecondsUnitLabel, this._renderWebparts))),
                        this.props.postFlush && (React.createElement("td", { className: PerformanceHeader_module_scss_1.default.headerTableRows }, sp_core_library_1.Text.format(PerformanceDisplay_resx_1.default.MillisecondsUnitLabel, this.props.postFlush)))))),
            React.createElement("div", null, legend)));
    };
    /**
     * Calculate overall load times for categories:
     * Server Response
     * App Load
     * Page Render
     * Web Parts Render
     * Total
     */
    PerformanceHeader.prototype._getPerfTimings = function () {
        this._hasWebParts = false;
        for (var _i = 0, _a = this.props.perfItems; _i < _a.length; _i++) {
            var item = _a[_i];
            if (item.id === 'appStart') {
                this._appStart = item.duration;
            }
            else if (item.id === 'head') {
                this._headStart = item.startVal;
                this._headTime = item.duration;
            }
            else if (item.id === 'serverResponseWait') {
                this._serverResponseWait = item.duration;
            }
            else if (item.id.indexOf('WebPart') > -1) {
                this._hasWebParts = true;
            }
        }
        this._renderPageDuration = this.props.overallDuration - this._appStart;
        this._renderWebparts =
            this.props.overallDuration - (this.props.speedOfLight ? this.props.speedOfLight : this._appStart);
    };
    return PerformanceHeader;
}(React.Component));
exports.default = PerformanceHeader;
//# sourceMappingURL=PerformanceHeader.js.map