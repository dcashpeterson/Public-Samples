"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseResJson = void 0;
const node_core_library_1 = require("@rushstack/node-core-library");
/**
 * @public
 */
function parseResJson({ content, ignoreString, filePath }) {
    const resjsonFile = node_core_library_1.JsonFile.parseString(content);
    const parsedFile = {};
    const usedComments = new Map();
    for (const [key, value] of Object.entries(resjsonFile)) {
        if (key.startsWith('_') && key.endsWith('.comment')) {
            if (!usedComments.has(key)) {
                usedComments.set(key, false);
            }
        }
        else {
            const commentKey = `_${key}.comment`;
            const comment = resjsonFile[commentKey];
            usedComments.set(commentKey, true);
            if (!(ignoreString === null || ignoreString === void 0 ? void 0 : ignoreString(filePath, key))) {
                parsedFile[key] = { value, comment };
            }
        }
    }
    const orphanComments = [];
    for (const [key, used] of usedComments) {
        if (!used) {
            orphanComments.push(key.slice(1, -'.comment'.length));
        }
    }
    if (orphanComments.length > 0) {
        throw new Error('The resjson file is invalid. Comments exist for the following string keys ' +
            `that don't have values: ${orphanComments.join(', ')}.`);
    }
    return parsedFile;
}
exports.parseResJson = parseResJson;
//# sourceMappingURL=parseResJson.js.map