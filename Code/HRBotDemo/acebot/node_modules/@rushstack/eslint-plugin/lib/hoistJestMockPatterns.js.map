{"version":3,"file":"hoistJestMockPatterns.js","sourceRoot":"","sources":["../src/hoistJestMockPatterns.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAE3D,0DAAsD;AAOtD,4CAA4C;AAC5C,yBAAyB;AACzB,EAAE;AACF,QAAQ;AACR,MAAM;AACN,8BAA8B;AAC9B,gBAAgB;AAChB,kCAAkC;AAClC,kBAAkB;AAClB,8BAA8B;AAC9B,uBAAuB;AACvB,WAAW;AACX,oBAAoB;AACpB,8BAA8B;AAC9B,uBAAuB;AACvB,UAAU;AACV,SAAS;AACT,mBAAmB;AACnB,UAAU;AACV,2BAA2B;AAC3B,2BAA2B;AAC3B,UAAU;AACV,QAAQ;AACR,OAAO;AACM,QAAA,kBAAkB,GAAgB,IAAI,0BAAW,CAAC;IAC7D,IAAI,EAAE,gBAAgB;IACtB,MAAM,EAAE;QACN,IAAI,EAAE,kBAAkB;QACxB,MAAM,EAAE;YACN,IAAI,EAAE,YAAY;YAClB,IAAI,EAAE,MAAM;SACb;QACD,QAAQ,EAAE;YACR,IAAI,EAAE,YAAY;YAClB,IAAI,EAAE,0BAAW,CAAC,GAAG,CAAC,YAAY,CAAC;SACpC;KACF;CACF,CAAC,CAAC;AAEH,yDAAyD;AACzD,uCAAuC;AAC1B,QAAA,qBAAqB,GAAgB,IAAI,0BAAW,CAAC;IAChE,IAAI,EAAE,gBAAgB;IACtB,MAAM,EAAE;QACN,IAAI,EAAE,YAAY;QAClB,IAAI,EAAE,SAAS;KAChB;CACF,CAAC,CAAC;AAEH,sDAAsD;AACtD,sCAAsC;AACzB,QAAA,gBAAgB,GAAgB,IAAI,0BAAW,CAAC;IAC3D,IAAI,EAAE,kBAAkB;IACxB,MAAM,EAAE;QACN,IAAI,EAAE,SAAS;KAChB;CACF,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { TreePattern } from '@rushstack/tree-pattern';\r\n\r\nexport interface IJestCallExpression {\r\n  // Example: \"mock\" from \"jest.mock('./thing')\"\r\n  methodName?: string;\r\n}\r\n\r\n// Matches a statement expression like this:\r\n//   jest.mock('./thing')\r\n//\r\n// Tree:\r\n//   {\r\n//     type: 'CallExpression',\r\n//     callee: {\r\n//       type: 'MemberExpression',\r\n//       object: {\r\n//         type: 'Identifier',\r\n//         name: 'jest'\r\n//       },\r\n//       property: {\r\n//         type: 'Identifier',\r\n//         name: 'mock'\r\n//       }\r\n//     },\r\n//     arguments: [\r\n//       {\r\n//         type: 'Literal',\r\n//         value: './thing'\r\n//       }\r\n//     ]\r\n//   };\r\nexport const jestCallExpression: TreePattern = new TreePattern({\r\n  type: 'CallExpression',\r\n  callee: {\r\n    type: 'MemberExpression',\r\n    object: {\r\n      type: 'Identifier',\r\n      name: 'jest'\r\n    },\r\n    property: {\r\n      type: 'Identifier',\r\n      name: TreePattern.tag('methodName')\r\n    }\r\n  }\r\n});\r\n\r\n// Matches require() in a statement expression like this:\r\n//   const x = require(\"package-name\");\r\nexport const requireCallExpression: TreePattern = new TreePattern({\r\n  type: 'CallExpression',\r\n  callee: {\r\n    type: 'Identifier',\r\n    name: 'require'\r\n  }\r\n});\r\n\r\n// Matches import in a statement expression like this:\r\n//   const x = import(\"package-name\");\r\nexport const importExpression: TreePattern = new TreePattern({\r\n  type: 'ImportExpression',\r\n  source: {\r\n    type: 'Literal'\r\n  }\r\n});\r\n"]}