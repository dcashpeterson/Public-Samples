"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var sp_core_library_1 = require("@microsoft/sp-core-library");
var React = tslib_1.__importStar(require("react"));
var office_ui_fabric_react_bundle_1 = require("@ms/office-ui-fabric-react-bundle");
var Strings_resx_1 = tslib_1.__importDefault(require("../loc/Strings.resx"));
var PropertyPaneFooter_module_scss_1 = tslib_1.__importDefault(require("./PropertyPaneFooter.module.scss"));
var PropertyPane_1 = require("../propertyPane/PropertyPane");
var PropertyPaneFooter = /** @class */ (function (_super) {
    tslib_1.__extends(PropertyPaneFooter, _super);
    function PropertyPaneFooter(props) {
        var _this = _super.call(this, props) || this;
        _this._onBackClick = function () {
            _this.props.onFlipPage(PropertyPane_1.PageDirection.back);
        };
        _this._onNextClick = function () {
            _this.props.onFlipPage(PropertyPane_1.PageDirection.next);
        };
        _this._renderCommandButtons = _this._renderCommandButtons.bind(_this);
        _this._pageNavigationButtons = _this._pageNavigationButtons.bind(_this);
        return _this;
    }
    PropertyPaneFooter.prototype.render = function () {
        return ((!this.props.isReactive || this.props.numberOfPages > 1) && (React.createElement("div", { className: PropertyPaneFooter_module_scss_1.default.propertyPaneFooter },
            this._renderCommandButtons(),
            this._pageNavigationButtons())));
    };
    PropertyPaneFooter.prototype._renderCommandButtons = function () {
        // We are specifically checking for 'false' because there are cases where the prop can have
        // 'undefined' as it's value and we do not want to display the command buttons in that case.
        return (this.props.isReactive === false && (React.createElement("div", { className: this.props.numberOfPages > 1 ? PropertyPaneFooter_module_scss_1.default.propertyPaneCommandButtonsBox : undefined },
            React.createElement(office_ui_fabric_react_bundle_1.PrimaryButton, { "data-automation-id": 'propertyPaneApplyButton', disabled: !this.props.isSaveButtonEnabled, onClick: this.props.onSaveClick, ariaDescription: Strings_resx_1.default.ApplyButtonAriaDescription }, Strings_resx_1.default.Save))));
    };
    PropertyPaneFooter.prototype._pageNavigationButtons = function () {
        return (this.props.numberOfPages > 1 && (React.createElement("div", { className: PropertyPaneFooter_module_scss_1.default.propertyPanePageNav },
            React.createElement("button", { className: PropertyPaneFooter_module_scss_1.default.propertyPaneBackNavLink, disabled: this.props.currentPage === 1, onClick: this._onBackClick },
                React.createElement("i", { className: (0, office_ui_fabric_react_bundle_1.css)(this._arrowKeyIcon(PropertyPane_1.PageDirection.back), PropertyPaneFooter_module_scss_1.default.propertyPaneBackArrow) }),
                Strings_resx_1.default.PropertyPaneBackPage),
            React.createElement("span", { role: 'status', className: (0, office_ui_fabric_react_bundle_1.css)(PropertyPaneFooter_module_scss_1.default.propertyPanePageOfPages) }, sp_core_library_1.Text.format(Strings_resx_1.default.PropertyPanePageOfPages, this.props.currentPage, this.props.numberOfPages)),
            React.createElement("button", { className: PropertyPaneFooter_module_scss_1.default.propertyPaneNextNavLink, disabled: this.props.currentPage === this.props.numberOfPages, onClick: this._onNextClick },
                Strings_resx_1.default.PropertyPaneNextPage,
                React.createElement("i", { className: (0, office_ui_fabric_react_bundle_1.css)(this._arrowKeyIcon(PropertyPane_1.PageDirection.next), PropertyPaneFooter_module_scss_1.default.propertyPaneNextArrow) })))));
    };
    PropertyPaneFooter.prototype._arrowKeyIcon = function (dir) {
        var rtl = document.dir === 'rtl';
        var chevronRightIcon = (0, office_ui_fabric_react_bundle_1.getIconClassName)('ChevronRight');
        var chevronLeftIcon = (0, office_ui_fabric_react_bundle_1.getIconClassName)('ChevronLeft');
        if (dir === PropertyPane_1.PageDirection.back) {
            return rtl ? chevronRightIcon : chevronLeftIcon;
        }
        else {
            return rtl ? chevronLeftIcon : chevronRightIcon;
        }
    };
    return PropertyPaneFooter;
}(React.Component));
exports.default = PropertyPaneFooter;
//# sourceMappingURL=PropertyPaneFooter.js.map