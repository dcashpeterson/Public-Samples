{"version":3,"file":"hoistJestMockPatterns.js","sourceRoot":"","sources":["../src/hoistJestMockPatterns.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAE3D,0DAAsD;AAOtD,4CAA4C;AAC5C,yBAAyB;AACzB,EAAE;AACF,QAAQ;AACR,MAAM;AACN,8BAA8B;AAC9B,gBAAgB;AAChB,kCAAkC;AAClC,kBAAkB;AAClB,8BAA8B;AAC9B,uBAAuB;AACvB,WAAW;AACX,oBAAoB;AACpB,8BAA8B;AAC9B,uBAAuB;AACvB,UAAU;AACV,SAAS;AACT,mBAAmB;AACnB,UAAU;AACV,2BAA2B;AAC3B,2BAA2B;AAC3B,UAAU;AACV,QAAQ;AACR,OAAO;AACM,QAAA,kBAAkB,GAAgB,IAAI,0BAAW,CAAC;IAC7D,IAAI,EAAE,gBAAgB;IACtB,MAAM,EAAE;QACN,IAAI,EAAE,kBAAkB;QACxB,MAAM,EAAE;YACN,IAAI,EAAE,YAAY;YAClB,IAAI,EAAE,MAAM;SACb;QACD,QAAQ,EAAE;YACR,IAAI,EAAE,YAAY;YAClB,IAAI,EAAE,0BAAW,CAAC,GAAG,CAAC,YAAY,CAAC;SACpC;KACF;CACF,CAAC,CAAC;AAEH,yDAAyD;AACzD,uCAAuC;AAC1B,QAAA,qBAAqB,GAAgB,IAAI,0BAAW,CAAC;IAChE,IAAI,EAAE,gBAAgB;IACtB,MAAM,EAAE;QACN,IAAI,EAAE,YAAY;QAClB,IAAI,EAAE,SAAS;KAChB;CACF,CAAC,CAAC;AAEH,sDAAsD;AACtD,sCAAsC;AACzB,QAAA,gBAAgB,GAAgB,IAAI,0BAAW,CAAC;IAC3D,IAAI,EAAE,kBAAkB;IACxB,MAAM,EAAE;QACN,IAAI,EAAE,SAAS;KAChB;CACF,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport { TreePattern } from '@rushstack/tree-pattern';\n\nexport interface IJestCallExpression {\n  // Example: \"mock\" from \"jest.mock('./thing')\"\n  methodName?: string;\n}\n\n// Matches a statement expression like this:\n//   jest.mock('./thing')\n//\n// Tree:\n//   {\n//     type: 'CallExpression',\n//     callee: {\n//       type: 'MemberExpression',\n//       object: {\n//         type: 'Identifier',\n//         name: 'jest'\n//       },\n//       property: {\n//         type: 'Identifier',\n//         name: 'mock'\n//       }\n//     },\n//     arguments: [\n//       {\n//         type: 'Literal',\n//         value: './thing'\n//       }\n//     ]\n//   };\nexport const jestCallExpression: TreePattern = new TreePattern({\n  type: 'CallExpression',\n  callee: {\n    type: 'MemberExpression',\n    object: {\n      type: 'Identifier',\n      name: 'jest'\n    },\n    property: {\n      type: 'Identifier',\n      name: TreePattern.tag('methodName')\n    }\n  }\n});\n\n// Matches require() in a statement expression like this:\n//   const x = require(\"package-name\");\nexport const requireCallExpression: TreePattern = new TreePattern({\n  type: 'CallExpression',\n  callee: {\n    type: 'Identifier',\n    name: 'require'\n  }\n});\n\n// Matches import in a statement expression like this:\n//   const x = import(\"package-name\");\nexport const importExpression: TreePattern = new TreePattern({\n  type: 'ImportExpression',\n  source: {\n    type: 'Literal'\n  }\n});\n"]}