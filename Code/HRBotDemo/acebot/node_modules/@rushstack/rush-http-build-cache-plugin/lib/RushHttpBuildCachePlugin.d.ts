import type { IRushPlugin, RushSession, RushConfiguration } from '@rushstack/rush-sdk';
/**
 * @public
 */
export interface IRushHttpBuildCachePluginConfig {
    /**
     * The URL of the server that stores the caches (e.g. "https://build-caches.example.com").
     */
    url: string;
    /**
     * The HTTP method to use when writing to the cache (defaults to PUT).
     */
    uploadMethod?: string;
    /**
     * An optional set of HTTP headers to pass to the cache server.
     */
    headers?: Record<string, string>;
    /**
     * An optional command that prints the endpoint's credentials to stdout. Provide the
     * command or script to execute and, optionally, any arguments to pass to the script.
     */
    tokenHandler?: {
        exec: string;
        args?: string[];
    };
    /**
     * Prefix for cache keys.
     */
    cacheKeyPrefix?: string;
    /**
     * If set to true, allow writing to the cache. Defaults to false.
     */
    isCacheWriteAllowed?: boolean;
}
/**
 * @public
 */
export declare class RushHttpBuildCachePlugin implements IRushPlugin {
    readonly pluginName: string;
    apply(rushSession: RushSession, rushConfig: RushConfiguration): void;
}
//# sourceMappingURL=RushHttpBuildCachePlugin.d.ts.map