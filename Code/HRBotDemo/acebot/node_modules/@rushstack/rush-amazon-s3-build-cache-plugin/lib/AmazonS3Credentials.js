"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
Object.defineProperty(exports, "__esModule", { value: true });
exports.fromRushEnv = exports.fromAmazonEnv = exports.AWS_SESSION_TOKEN = exports.AWS_SECRET_ACCESS_KEY = exports.AWS_ACCESS_KEY_ID = void 0;
const rush_sdk_1 = require("@rushstack/rush-sdk");
exports.AWS_ACCESS_KEY_ID = 'AWS_ACCESS_KEY_ID';
exports.AWS_SECRET_ACCESS_KEY = 'AWS_SECRET_ACCESS_KEY';
exports.AWS_SESSION_TOKEN = 'AWS_SESSION_TOKEN';
/**
 * Attempt to read credentials from the commonly used AWS_* env vars.
 */
const fromAmazonEnv = () => {
    const accessKeyId = process.env[exports.AWS_ACCESS_KEY_ID];
    const secretAccessKey = process.env[exports.AWS_SECRET_ACCESS_KEY];
    const sessionToken = process.env[exports.AWS_SESSION_TOKEN];
    if (accessKeyId && secretAccessKey) {
        return {
            accessKeyId,
            secretAccessKey,
            sessionToken
        };
    }
    else if (accessKeyId) {
        throw new Error(`The "${exports.AWS_ACCESS_KEY_ID}" env variable is set, but the "${exports.AWS_SECRET_ACCESS_KEY}" ` +
            `env variable is not set. Both or neither must be provided.`);
    }
    else if (secretAccessKey) {
        throw new Error(`The "${exports.AWS_SECRET_ACCESS_KEY}" env variable is set, but the "${exports.AWS_ACCESS_KEY_ID}" ` +
            `env variable is not set. Both or neither must be provided.`);
    }
    else {
        return undefined;
    }
};
exports.fromAmazonEnv = fromAmazonEnv;
/**
 * Attempt to parse credentials set from the RUSH_BUILD_CACHE_CREDENTIAL env var.
 */
const fromRushEnv = (credential = rush_sdk_1.EnvironmentConfiguration.buildCacheCredential) => {
    if (!credential) {
        return undefined;
    }
    const fields = credential.split(':');
    if (fields.length < 2 || fields.length > 3) {
        throw new Error(`Rush build cache credential is in an unexpected format.`);
    }
    return {
        accessKeyId: fields[0],
        secretAccessKey: fields[1],
        sessionToken: fields[2]
    };
};
exports.fromRushEnv = fromRushEnv;
//# sourceMappingURL=AmazonS3Credentials.js.map