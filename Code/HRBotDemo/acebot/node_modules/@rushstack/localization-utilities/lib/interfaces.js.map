{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../src/interfaces.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\n/**\n * Options for the pseudolocale library.\n *\n * @internalRemarks\n * Eventually this should be replaced with DefinitelyTyped types.\n *\n * @public\n */\nexport interface IPseudolocaleOptions {\n  prepend?: string;\n  append?: string;\n  delimiter?: string;\n  startDelimiter?: string;\n  endDelimiter?: string;\n  extend?: number;\n  override?: string;\n}\n\n/**\n * @public\n */\nexport interface ILocalizationFile {\n  [stringName: string]: ILocalizedString;\n}\n\n/**\n * @public\n */\nexport interface ILocalizedString {\n  value: string;\n  comment?: string;\n}\n\n/**\n * @public\n */\nexport interface IParseFileOptions {\n  content: string;\n  filePath: string;\n  /**\n   * Optionally, provide a function that will be called for each string. If the function returns `true`\n   * the string will not be included.\n   */\n  ignoreString?: IgnoreStringFunction;\n}\n\n/**\n * @public\n */\nexport type IgnoreStringFunction = (filePath: string, stringName: string) => boolean;\n"]}