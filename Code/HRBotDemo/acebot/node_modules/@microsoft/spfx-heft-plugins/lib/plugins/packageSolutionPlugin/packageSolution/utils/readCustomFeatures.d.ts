/**
 * Reads custom feature XML from folder specified by config. This function looks for all `.rels` files in
 * the `/_rels` folder, assumes that a Feature.xml file of the same name exists in the root folder. It
 * returns an object with a list of IFile files to include in the package, as well as the paths to all the
 * feature.xml files, which is later referenced by the `AppManifest.xml.rels` file, thereby including the
 * custom feature in the package.
 */
import type { ITerminal } from '@rushstack/node-core-library';
import type { IPackageSolutionConfig } from '../../SolutionPackager';
import type IFile from '../models/packageXml/IFile';
export interface ICustomFeatures {
    files: IFile[];
    customFeatureFilepath: string[];
}
/**
 * Reads custom feature XML from folder specified by config. This function looks for all `.rels` files in
 * the `/_rels` folder, assumes that a Feature.xml file of the same name exists in the root folder. It
 * returns an object with a list of IFile files to include in the package, as well as the paths to all the
 * feature.xml files, which is later referenced by the `AppManifest.xml.rels` file, thereby including the
 * custom feature in the package.
 * todo: we allow multiple featureXML globs to be specified
 */
export declare function readCustomFeaturesAsync(terminal: ITerminal, options: IPackageSolutionConfig): Promise<ICustomFeatures>;
//# sourceMappingURL=readCustomFeatures.d.ts.map