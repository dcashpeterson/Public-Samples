"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IframeLoadRedirector = exports.REDIRECT_PARAM = exports.APPLICATION_STARTED_DATA = void 0;
var KillSwitches_1 = require("../utilities/KillSwitches");
exports.APPLICATION_STARTED_DATA = {
    event: 'onApplicationStarted',
    identifier: 'f87d7709-c7f1-4dc4-9935-9ceee66a32fb'
};
exports.REDIRECT_PARAM = 'spfxRedirectUrl';
var WAIT_PERIOD = 2000;
/**
 * @internal
 */
var IframeLoadRedirector = /** @class */ (function () {
    function IframeLoadRedirector() {
        var _this = this;
        this._checkApplicationStarted = function (message) {
            var data = message.data;
            var mapKey = new URL(message.origin).hostname;
            var timeoutId = _this._timeoutMap.get(mapKey);
            if (data.event === 'onApplicationStarted' && data.identifier === 'f87d7709-c7f1-4dc4-9935-9ceee66a32fb') {
                if (timeoutId !== undefined) {
                    clearTimeout(timeoutId);
                }
                else if (!(0, KillSwitches_1.isPreventLateIframeRedirectKSActivated)()) {
                    if (!sessionStorage.getItem(exports.REDIRECT_PARAM)) {
                        sessionStorage.setItem(exports.REDIRECT_PARAM, '{}');
                    }
                    var redirectMap = JSON.parse(sessionStorage.getItem(exports.REDIRECT_PARAM));
                    redirectMap[mapKey] = true;
                    sessionStorage.setItem(exports.REDIRECT_PARAM, JSON.stringify(redirectMap));
                }
            }
        };
        window.addEventListener('message', this._checkApplicationStarted);
        this._timeoutMap = new Map();
    }
    Object.defineProperty(IframeLoadRedirector, "instance", {
        get: function () {
            if (!IframeLoadRedirector._instance) {
                IframeLoadRedirector._instance = new IframeLoadRedirector();
            }
            return IframeLoadRedirector._instance;
        },
        enumerable: false,
        configurable: true
    });
    IframeLoadRedirector.prototype.confirmLoadOrRedirect = function (frameUrl) {
        var url = new URL(frameUrl);
        // Using sessionStorage to prevent infinite redirects within the same session
        // Not using localStorage so we don't have to track the TTL of the SP cookie
        if (!sessionStorage.getItem(exports.REDIRECT_PARAM)) {
            sessionStorage.setItem(exports.REDIRECT_PARAM, '{}');
        }
        var redirectMap = JSON.parse(sessionStorage.getItem(exports.REDIRECT_PARAM));
        var mapKey = url.hostname;
        if (!this._timeoutMap.has(mapKey) && !redirectMap[mapKey]) {
            var separator_1 = url.search.length > 0 ? '&' : '?';
            var id = setTimeout(function () {
                return (window.location.href = "".concat(frameUrl).concat(separator_1).concat(exports.REDIRECT_PARAM, "=").concat(encodeURIComponent(window.location.href)));
            }, WAIT_PERIOD);
            this._timeoutMap.set(mapKey, id);
            redirectMap[mapKey] = true;
            sessionStorage.setItem(exports.REDIRECT_PARAM, JSON.stringify(redirectMap));
        }
    };
    return IframeLoadRedirector;
}());
exports.IframeLoadRedirector = IframeLoadRedirector;
//# sourceMappingURL=IframeLoadRedirector.js.map