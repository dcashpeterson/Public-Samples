import type { CommandLineParameter } from '@rushstack/ts-command-line';
import { BaseRushAction, type IBaseRushActionOptions } from '../actions/BaseRushAction';
import type { Command, CommandLineConfiguration, IParameterJson } from '../../api/CommandLineConfiguration';
/**
 * Constructor parameters for BaseScriptAction
 */
export interface IBaseScriptActionOptions<TCommand extends Command> extends IBaseRushActionOptions {
    commandLineConfiguration: CommandLineConfiguration;
    command: TCommand;
}
/**
 * Base class for command-line actions that are implemented using user-defined scripts.
 *
 * @remarks
 * Compared to the normal built-in actions, these actions are special because (1) they
 * can be discovered dynamically via common/config/command-line.json, and (2)
 * user-defined command-line parameters can be passed through to the script.
 *
 * The two subclasses are BulkScriptAction and GlobalScriptAction.
 */
export declare abstract class BaseScriptAction<TCommand extends Command> extends BaseRushAction {
    protected readonly commandLineConfiguration: CommandLineConfiguration;
    protected readonly customParameters: Map<IParameterJson, CommandLineParameter>;
    protected readonly command: TCommand;
    constructor(options: IBaseScriptActionOptions<TCommand>);
    protected defineScriptParameters(): void;
}
//# sourceMappingURL=BaseScriptAction.d.ts.map