"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fastGlob = require("fast-glob");
const path = require("path");
const isSubdir = require("is-subdir");
async function binify(manifest, pkgPath) {
    var _a;
    if (manifest.bin) {
        return commandsFromBin(manifest.bin, manifest.name, pkgPath);
    }
    if ((_a = manifest.directories) === null || _a === void 0 ? void 0 : _a.bin) {
        const binDir = path.join(pkgPath, manifest.directories.bin);
        const files = await findFiles(binDir);
        return files.map((file) => ({
            name: path.basename(file),
            path: path.join(binDir, file),
        }));
    }
    return [];
}
exports.default = binify;
async function findFiles(dir) {
    try {
        return await fastGlob('**', {
            cwd: dir,
            onlyFiles: true,
            followSymbolicLinks: false,
        });
    }
    catch (err) {
        if (err.code !== 'ENOENT') {
            throw err;
        }
        return [];
    }
}
function commandsFromBin(bin, pkgName, pkgPath) {
    if (typeof bin === 'string') {
        return [
            {
                name: pkgName.startsWith('@') ? pkgName.substr(pkgName.indexOf('/') + 1) : pkgName,
                path: path.join(pkgPath, bin),
            },
        ];
    }
    return Object.keys(bin)
        .filter((commandName) => encodeURIComponent(commandName) === commandName)
        .map((commandName) => ({
        name: commandName,
        path: path.join(pkgPath, bin[commandName]),
    }))
        .filter((cmd) => isSubdir(pkgPath, cmd.path));
}
//# sourceMappingURL=index.js.map