"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Common helper functions for working with Response Headers.  These utilities are intended to be simple,
 * small, and very broadly applicable.
 * @internal
 */
var ResponseUtilities = /** @class */ (function () {
    function ResponseUtilities() {
    }
    /**
     * @param authenticateHeader - Represents the "WWW-Authenticate" from Response Header
     * @returns required Claims from the Response Header
     */
    ResponseUtilities.getRequiredClaims = function (authenticateHeader) {
        // Authenticate header will look like this:
        // `Bearer realm="7fe4c4f2-31c2-4651-bdfd-b7692b373e02",client_id="00000003-0000-0ff1-ce00-000000000000",trusted_issuers="D3776938-3DBA-481F-A652-4BEDFCAB7CD8@*,https://sts.windows-ppe.net/*/,00000003-0000-0ff1-ce00-000000000000@90140122-8516-11e1-8eff-49304924019b",authorization_uri="https://login.windows-ppe.net/common/oauth2/authorize",error="insufficient_claims",claims="eyJhY2Nlc3NfdG9rZW4iOnsiY2Fwb2xpZHMiOnsiZXNzZW50aWFsIjp0cnVlLCJ2YWx1ZXMiOlsiNGE0YzkwOWItYzdiNi00MWQxLWE3MzQtZTA2MzRiNTJjOGU1Il19fX0="`;
        var claims = authenticateHeader
            .split(',')
            .map(function (nameValue) {
            var equalIndex = nameValue.indexOf('=');
            return [nameValue.substr(0, equalIndex), nameValue.substr(equalIndex + 1)];
        })
            .filter(function (nameValueArray) { return nameValueArray[0] === 'claims'; });
        /**
         * There can be scenarios where we may not have claims challenge as part of the response header.
         */
        if (claims && claims.length > 0) {
            // Claims is base 64 encoded and includes quotes, this strips out the quotes (which is not a base 64 encoded value so no worries of changing the data)
            return claims[0][1].replace(/"/g, '');
        }
        // If there is no claims challenge, then the caller should handle it accordingly.
        return '';
    };
    return ResponseUtilities;
}());
exports.default = ResponseUtilities;
//# sourceMappingURL=ResponseUtilities.js.map