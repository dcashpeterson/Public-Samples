{"version":3,"file":"RushAzureStorageBuildCachePlugin.js","sourceRoot":"","sources":["../src/RushAzureStorageBuildCachePlugin.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;;;;;;;;;;;;;;;;;;;;;;;;AAK3D,MAAM,WAAW,GAAW,8BAA8B,CAAC;AAgC3D;;GAEG;AACH,MAAa,gCAAgC;IAA7C;QACS,eAAU,GAAW,WAAW,CAAC;IAoB1C,CAAC;IAlBQ,KAAK,CAAC,WAAwB,EAAE,UAA6B;QAClE,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,EAAE;YACjD,WAAW,CAAC,sCAAsC,CAAC,oBAAoB,EAAE,KAAK,EAAE,gBAAgB,EAAE,EAAE;gBAIlG,MAAM,EAAE,6BAA6B,EAAE,GAAG,gBAA+B,CAAC;gBAC1E,MAAM,EAAE,8BAA8B,EAAE,GAAG,wDAAa,kCAAkC,GAAC,CAAC;gBAC5F,OAAO,IAAI,8BAA8B,CAAC;oBACxC,kBAAkB,EAAE,6BAA6B,CAAC,kBAAkB;oBACpE,oBAAoB,EAAE,6BAA6B,CAAC,oBAAoB;oBACxE,gBAAgB,EAAE,6BAA6B,CAAC,gBAAgB;oBAChE,UAAU,EAAE,6BAA6B,CAAC,UAAU;oBACpD,mBAAmB,EAAE,CAAC,CAAC,6BAA6B,CAAC,mBAAmB;iBACzE,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AArBD,4EAqBC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport type { IRushPlugin, RushSession, RushConfiguration } from '@rushstack/rush-sdk';\nimport type { AzureEnvironmentName } from './AzureAuthenticationBase';\n\nconst PLUGIN_NAME: string = 'AzureStorageBuildCachePlugin';\n\n/**\n * @public\n */\ninterface IAzureBlobStorageConfigurationJson {\n  /**\n   * The name of the the Azure storage account to use for build cache.\n   */\n  storageAccountName: string;\n\n  /**\n   * The name of the container in the Azure storage account to use for build cache.\n   */\n  storageContainerName: string;\n\n  /**\n   * The Azure environment the storage account exists in. Defaults to AzureCloud.\n   */\n  azureEnvironment?: AzureEnvironmentName;\n\n  /**\n   * An optional prefix for cache item blob names.\n   */\n  blobPrefix?: string;\n\n  /**\n   * If set to true, allow writing to the cache. Defaults to false.\n   */\n  isCacheWriteAllowed?: boolean;\n}\n\n/**\n * @public\n */\nexport class RushAzureStorageBuildCachePlugin implements IRushPlugin {\n  public pluginName: string = PLUGIN_NAME;\n\n  public apply(rushSession: RushSession, rushConfig: RushConfiguration): void {\n    rushSession.hooks.initialize.tap(PLUGIN_NAME, () => {\n      rushSession.registerCloudBuildCacheProviderFactory('azure-blob-storage', async (buildCacheConfig) => {\n        type IBuildCache = typeof buildCacheConfig & {\n          azureBlobStorageConfiguration: IAzureBlobStorageConfigurationJson;\n        };\n        const { azureBlobStorageConfiguration } = buildCacheConfig as IBuildCache;\n        const { AzureStorageBuildCacheProvider } = await import('./AzureStorageBuildCacheProvider');\n        return new AzureStorageBuildCacheProvider({\n          storageAccountName: azureBlobStorageConfiguration.storageAccountName,\n          storageContainerName: azureBlobStorageConfiguration.storageContainerName,\n          azureEnvironment: azureBlobStorageConfiguration.azureEnvironment,\n          blobPrefix: azureBlobStorageConfiguration.blobPrefix,\n          isCacheWriteAllowed: !!azureBlobStorageConfiguration.isCacheWriteAllowed\n        });\n      });\n    });\n  }\n}\n"]}