"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var PropertyPaneGroup_1 = tslib_1.__importDefault(require("../propertyPaneGroup/PropertyPaneGroup"));
var PropertyPanePage_module_scss_1 = tslib_1.__importDefault(require("./PropertyPanePage.module.scss"));
var PropertyPaneConditionalGroup_1 = tslib_1.__importDefault(require("../propertyPaneConditionalGroup/PropertyPaneConditionalGroup"));
/**
 * PropertyPane page component
 *
 * @internal
 */
var PropertyPanePage = /** @class */ (function (_super) {
    tslib_1.__extends(PropertyPanePage, _super);
    function PropertyPanePage() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._propertyPanePage = React.createRef();
        return _this;
    }
    PropertyPanePage.prototype.componentDidMount = function () {
        this.props.setContainerDiv(this._propertyPanePage.current);
    };
    PropertyPanePage.prototype.render = function () {
        var propertyPaneDescriptionClassName = "".concat(PropertyPanePage_module_scss_1.default.propertyPanePageDescription, " ").concat(this.props.isPropertyPaneExpanded ? PropertyPanePage_module_scss_1.default.propertyPanePageDescriptionExpanded : '');
        return (React.createElement("div", { className: this.props.isPropertyPaneExpanded ? PropertyPanePage_module_scss_1.default.propertyPanePageExpandedContainer : '', ref: this._propertyPanePage },
            this.props.pageDescription ? (React.createElement("div", { className: propertyPaneDescriptionClassName, id: 'propertyPaneDescriptionId' }, this.props.pageDescription)) : null,
            this.props.isPropertyPaneExpanded ? (this._getMultiColumnPage()) : (React.createElement("div", null, this._getPropertyGroupsForPage(this.props.propertyGroups)))));
    };
    PropertyPanePage.prototype._isConditionalGroup = function (group) {
        return 'primaryGroup' in group;
    };
    PropertyPanePage.prototype._getPropertyGroupsForPage = function (groups) {
        var _this = this;
        var index = 0;
        var propertyGroups = groups.map(function (group) {
            if (_this._isConditionalGroup(group)) {
                group = group;
                return (React.createElement("div", { key: 'PropertyPaneConditionalGroup' + index },
                    React.createElement(PropertyPaneConditionalGroup_1.default, tslib_1.__assign({}, group, _this.props, { index: index++ }))));
            }
            else {
                group = group;
                return (React.createElement(PropertyPaneGroup_1.default, tslib_1.__assign({}, _this.props, { key: 'PropertyPaneGroup' + index++, pageNumber: _this.props.pageNumber, isGroupNameHidden: group.isGroupNameHidden, groupName: group.groupName, groupFields: group.groupFields, onChange: _this.props.onChange, properties: _this.props.properties, setEntryState: _this.props.setEntryState, isCollapsed: group.isCollapsed, displayGroupsAsAccordion: _this.props.displayGroupsAsAccordion, propertyPaneGroupStateChanged: _this.props.propertyPaneGroupStateChanged, propertyPanePagesStateMap: _this.props.propertyPanePagesStateMap, dynamicConfiguration: _this.props.dynamicConfiguration })));
            }
        });
        return propertyGroups;
    };
    PropertyPanePage.prototype._getMultiColumnPage = function () {
        var leftColumnProperties = this._getPropertyGroupsForPage(this.props.propertyColumns[0]);
        var rightColumnProperties = this._getPropertyGroupsForPage(this.props.propertyColumns[1]);
        var panelClass = this.props.isScrollingEnabled
            ? PropertyPanePage_module_scss_1.default.propertyPanePageScroll
            : '';
        return (React.createElement("div", { className: PropertyPanePage_module_scss_1.default.propertyPanePageMultiColumnContainer },
            React.createElement("div", { className: panelClass }, leftColumnProperties),
            React.createElement("div", { className: panelClass }, rightColumnProperties)));
    };
    return PropertyPanePage;
}(React.Component));
exports.default = PropertyPanePage;
//# sourceMappingURL=PropertyPanePage.js.map