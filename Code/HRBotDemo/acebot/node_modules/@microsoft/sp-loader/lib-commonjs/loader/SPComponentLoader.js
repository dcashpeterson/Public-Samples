"use strict";
// Copyright (c) Microsoft. All rights reserved.
Object.defineProperty(exports, "__esModule", { value: true });
exports.SPComponentLoader = void 0;
var sp_lodash_subset_1 = require("@microsoft/sp-lodash-subset");
/**
 * Component loader.
 * Needs to be initialized with an implemented `ISPComponentLoader`.
 *
 * @public
 */
var SPComponentLoader = /** @class */ (function () {
    function SPComponentLoader() {
    }
    /**
     * Initializes the component loader with an implementation.
     * Must be called once before it can be used.
     *
     * @internal
     */
    SPComponentLoader._initialize = function (componentLoader) {
        SPComponentLoader._instance = componentLoader;
    };
    /**
     * {@inheritDoc  _ISPComponentLoader._startApplication}
     *
     * @internal
     */
    SPComponentLoader._startApplication = function (preloadedData) {
        return SPComponentLoader._instance._startApplication(preloadedData);
    };
    /**
     * {@inheritdoc _ISPComponentLoader._preloadComponents}
     *
     * @internal
     */
    SPComponentLoader._preloadComponents = function () {
        SPComponentLoader._instance._preloadComponents();
    };
    // Public API
    /**
     * {@inheritDoc  _ISPComponentLoader.loadCss}
     */
    SPComponentLoader.loadCss = function (url) {
        return SPComponentLoader._instance.loadCss(url);
    };
    /**
     * {@inheritDoc  _ISPComponentLoader.loadScript}
     */
    SPComponentLoader.loadScript = function (url, options) {
        return SPComponentLoader._instance.loadScript(url, options);
    };
    /**
     * {@inheritDoc  _ISPComponentLoader.loadComponent}
     */
    SPComponentLoader.loadComponent = function (manifest) {
        return SPComponentLoader._instance.loadComponent(manifest);
    };
    // Alpha API
    /**
     * {@inheritDoc  _ISPComponentLoader.loadComponentById}
     *
     * @public
     */
    SPComponentLoader.loadComponentById = function (id, version) {
        return SPComponentLoader._instance.loadComponentById(id, version);
    };
    /**
     * {@inheritDoc  _ISPComponentLoader.registerManifests}
     *
     * @alpha
     */
    SPComponentLoader.registerManifests = function (manifests) {
        return SPComponentLoader._instance.registerManifests(manifests);
    };
    /**
     * {@inheritDoc  _ISPComponentLoader.refreshWebPartManifests}
     *
     * @alpha
     */
    SPComponentLoader.refreshWebPartManifests = function (manifests) {
        return SPComponentLoader._instance.refreshWebPartManifests(manifests);
    };
    /**
     * {@inheritDoc  _ISPComponentLoader.manifestReferences}
     *
     * @internal
     */
    SPComponentLoader._getManifestReferences = function () {
        return SPComponentLoader._instance._manifestReferences;
    };
    /**
     * Returns static copies of all the manifests.
     *
     * @public
     * @deprecated this method will be removed in a future release.
     */
    SPComponentLoader.getManifests = function () {
        var retVal = [];
        SPComponentLoader._instance._manifestReferences.forEach(function (manifest) {
            retVal.push((0, sp_lodash_subset_1.cloneDeep)(manifest));
        });
        return retVal;
    };
    /**
     * {@inheritDoc  _ISPComponentLoader.tryGetLoadedComponent}
     *
     * @alpha
     */
    SPComponentLoader.tryGetLoadedComponent = function (manifest) {
        return SPComponentLoader._instance.tryGetLoadedComponent(manifest);
    };
    /**
     * {@inheritDoc  _ISPComponentLoader.tryGetManifestById}
     *
     * @alpha
     */
    SPComponentLoader.tryGetManifestById = function (id, version) {
        return SPComponentLoader._instance.tryGetManifestById(id, version);
    };
    /**
     * {@inheritdoc ManifestStore.requestManifest}
     *
     * @alpha
     */
    SPComponentLoader.requestManifest = function (id, version) {
        return SPComponentLoader._instance.requestManifest(id, version);
    };
    // Internal methods
    /**
     * {@inheritDoc  _ISPComponentLoader._loadDebugManifestsForWorkbench}
     *
     * @internal
     */
    SPComponentLoader._loadDebugManifestsForWorkbench = function (manifestsFileUrl) {
        return SPComponentLoader._instance._loadDebugManifestsForWorkbench(manifestsFileUrl);
    };
    return SPComponentLoader;
}());
exports.SPComponentLoader = SPComponentLoader;
//# sourceMappingURL=SPComponentLoader.js.map