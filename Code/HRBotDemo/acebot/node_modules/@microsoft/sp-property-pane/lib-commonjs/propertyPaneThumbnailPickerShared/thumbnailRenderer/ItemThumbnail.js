"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved.
Object.defineProperty(exports, "__esModule", { value: true });
exports.ItemThumbnail = void 0;
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var office_ui_fabric_react_bundle_1 = require("@ms/office-ui-fabric-react-bundle");
var sp_diagnostics_1 = require("@microsoft/sp-diagnostics");
var PropertyPaneThumbnailPickerTypes_1 = require("../PropertyPaneThumbnailPickerTypes");
var ItemThumbnail = /** @class */ (function (_super) {
    tslib_1.__extends(ItemThumbnail, _super);
    function ItemThumbnail(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            isRenderBackup: false
        };
        return _this;
    }
    ItemThumbnail.prototype.render = function () {
        var _a;
        var thumbnailContent = this._content;
        return thumbnailContent ? (React.createElement("div", { role: 'img', className: this.props.className, "aria-label": (_a = this.props.thumbnail) === null || _a === void 0 ? void 0 : _a.altText }, thumbnailContent)) : (false);
    };
    Object.defineProperty(ItemThumbnail.prototype, "_content", {
        get: function () {
            if (this.props.onRenderThumbnail) {
                return this.props.onRenderThumbnail();
            }
            var thumbnail = this.props.thumbnail;
            if (thumbnail) {
                switch (thumbnail.type) {
                    case PropertyPaneThumbnailPickerTypes_1.ThumbnailType.FabricReactIcon:
                        return (React.createElement(office_ui_fabric_react_bundle_1.Icon, { iconName: thumbnail.iconName, style: thumbnail.iconColor ? { color: thumbnail.iconColor } : undefined, role: 'presentation', className: this.props.iconClassName }));
                    case PropertyPaneThumbnailPickerTypes_1.ThumbnailType.IconSizeImage:
                        var iconImageProps = {
                            className: this.props.iconClassName,
                            imageFit: office_ui_fabric_react_bundle_1.ImageFit.cover,
                            src: thumbnail.iconUrl,
                            role: 'presentation',
                            alt: thumbnail.altText
                        };
                        return (React.createElement(office_ui_fabric_react_bundle_1.Icon, { iconType: office_ui_fabric_react_bundle_1.IconType.image, style: thumbnail.iconColor ? { color: thumbnail.iconColor } : undefined, imageProps: iconImageProps, className: this.props.iconClassName }));
                    case PropertyPaneThumbnailPickerTypes_1.ThumbnailType.Image:
                        var imageProps = {
                            imageFit: thumbnail.imageFit !== undefined ? thumbnail.imageFit : office_ui_fabric_react_bundle_1.ImageFit.cover,
                            src: this.state.isRenderBackup && thumbnail.backupImageUrl
                                ? thumbnail.backupImageUrl
                                : thumbnail.imageUrl,
                            alt: thumbnail.altText,
                            // Empty string for title will mute the title in upper level elements,
                            // hence assigned as undefined explicitly.
                            title: thumbnail.altText ? thumbnail.altText : undefined,
                            role: thumbnail.altText ? undefined : 'presentation',
                            className: this.props.iconClassName,
                            onLoadingStateChange: this._handleImageLoadingStateChange
                        };
                        // In IE browser, the width/hight is automatically set to 'auto', which causes the background img shifting
                        imageProps.styles = {
                            image: {
                                width: '100%',
                                height: '100%'
                            }
                        };
                        this._imageMonitor = new sp_diagnostics_1._QosMonitor("".concat(this.props.qosPrefix, ".ImageLoad"));
                        return (React.createElement(office_ui_fabric_react_bundle_1.Icon, { iconType: office_ui_fabric_react_bundle_1.IconType.image, imageProps: imageProps, className: this.props.iconClassName }));
                    default:
                        return undefined;
                }
            }
            else {
                return undefined;
            }
        },
        enumerable: false,
        configurable: true
    });
    ItemThumbnail.prototype._handleImageLoadingStateChange = function (loadingState) {
        if (this._imageMonitor) {
            if (loadingState === office_ui_fabric_react_bundle_1.ImageLoadState.loaded) {
                this._imageMonitor.writeSuccess();
            }
            else if (loadingState === office_ui_fabric_react_bundle_1.ImageLoadState.error) {
                this._imageMonitor.writeUnexpectedFailure('ImageLoadError', undefined, {
                    isRenderBackup: this.state.isRenderBackup
                });
            }
        }
        this.setState(function (prevState) {
            if (loadingState === office_ui_fabric_react_bundle_1.ImageLoadState.error && !prevState.isRenderBackup) {
                return {
                    isRenderBackup: true
                };
            }
        });
    };
    tslib_1.__decorate([
        office_ui_fabric_react_bundle_1.autobind
    ], ItemThumbnail.prototype, "_handleImageLoadingStateChange", null);
    return ItemThumbnail;
}(React.PureComponent));
exports.ItemThumbnail = ItemThumbnail;
//# sourceMappingURL=ItemThumbnail.js.map