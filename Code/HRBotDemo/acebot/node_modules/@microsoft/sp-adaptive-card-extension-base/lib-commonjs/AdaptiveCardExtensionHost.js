"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AdaptiveCardExtensionHost = void 0;
/**
 * Host needed to load Adaptive Card Extensions.
 *
 * @internal
 */
var AdaptiveCardExtensionHost = /** @class */ (function () {
    function AdaptiveCardExtensionHost(params) {
        this._onBeforeInitializedCallback = params.onBeforeInitializedCallback;
        this._onUpdateCallback = params.onUpdateCallback;
        this._onErrorCallback = params.onError;
        this._onRequestRenderTypeCallback = params.onRequestRenderTypeCallback;
        this._onVisibilityChanged = params.onVisibilityChanged;
        this._onRenderCompleted = params.onRenderCompleted;
        this._cache = params.cache;
        this.propertyPane = params.propertyPane;
    }
    /**
     * The host will invoke this._onUpdateCallback.
     *
     * @param card - CardObject
     */
    AdaptiveCardExtensionHost.prototype.update = function (card) {
        this._onUpdateCallback(card);
    };
    /**
     * Internal lifecycle before `BaseAdaptiveCardExtension.onInit` is invoked.
     *
     * @param ace - The Adaptive Card Extension
     */
    AdaptiveCardExtensionHost.prototype.onBeforeInitialized = function (ace) {
        if (this._onBeforeInitializedCallback) {
            this._onBeforeInitializedCallback(ace);
        }
    };
    /**
     * The host will invoke this._onErrorCallback
     * to renderError
     *
     * @param error - Error string
     */
    AdaptiveCardExtensionHost.prototype.onError = function (error) {
        if (this._onErrorCallback) {
            this._onErrorCallback(error);
        }
    };
    /**
     * Request that the renderer (WebPart/Mobile Dashboard) changes the ACE's RenderType
     * Because the renderer is the source-of-truth for the RenderType, the ACE cannot directly change it
     *
     * @param newRenderType - RenderType
     */
    AdaptiveCardExtensionHost.prototype.requestRenderTypeChange = function (newRenderType, instanceId) {
        this._onRequestRenderTypeCallback(newRenderType, instanceId);
    };
    Object.defineProperty(AdaptiveCardExtensionHost.prototype, "cache", {
        get: function () {
            return this._cache;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Allows an ACE to set the visibility of the web part renderer.
     */
    AdaptiveCardExtensionHost.prototype.onVisibilityChanged = function (card) {
        this._onVisibilityChanged(card);
    };
    AdaptiveCardExtensionHost.prototype.onRenderCompleted = function (instanceId, didUpdate) {
        if (this._onRenderCompleted) {
            this._onRenderCompleted(instanceId, didUpdate);
        }
    };
    return AdaptiveCardExtensionHost;
}());
exports.AdaptiveCardExtensionHost = AdaptiveCardExtensionHost;
//# sourceMappingURL=AdaptiveCardExtensionHost.js.map