"use strict";
//
// TODO: remove this file and related code after full switch to ACE Components: https://onedrive.visualstudio.com/DefaultCollection/WEX!/_workitems/edit/1690788
//
Object.defineProperty(exports, "__esModule", { value: true });
exports.SEARCH_FOOTER = exports.SEARCH_BOX = exports.TEXT_INPUT = exports.TITLE_TEXT = exports.BODY_PRIMARY_TEXT = exports.BODY_SECONDARY_TEXT = exports.PRIMARY_TEXT = void 0;
var tslib_1 = require("tslib");
var actionButtonHelper_1 = require("../util/actionButtonHelper");
var Strings_resx_1 = tslib_1.__importDefault(require("../../loc/Strings.resx"));
// Shared custom elements
exports.PRIMARY_TEXT = {
    type: 'TextBlock',
    subType: 'Primary',
    text: '${primaryText}',
    weight: 'Bolder',
    maxLines: 1,
    spacing: 'none'
};
exports.BODY_SECONDARY_TEXT = {
    type: 'TextBlock',
    subType: 'BodySecondary',
    text: '${description}',
    spacing: 'none',
    wrap: true
};
exports.BODY_PRIMARY_TEXT = {
    type: 'TextBlock',
    subType: 'BodyPrimary',
    text: '${primaryText}',
    spacing: 'none',
    wrap: true
};
exports.TITLE_TEXT = {
    type: 'TextBlock',
    subType: 'Title',
    text: '${title}',
    wrap: false,
    maxLines: 1,
    spacing: 'none'
};
var TEXT_INPUT = function (parameters, componentId) {
    var columnSet = {
        type: 'ColumnSet',
        columns: []
    };
    if (parameters.iconBefore) {
        columnSet.columns.push({
            type: 'Column',
            width: 16,
            spacing: 'none',
            items: [
                {
                    type: 'Icon',
                    iconProperty: '${iconBeforeProperty}',
                    altText: '${iconBeforeAltText}'
                }
            ]
        });
    }
    columnSet.columns.push({
        type: 'Column',
        width: 'stretch',
        spacing: 'none',
        items: [
            {
                type: 'Input.Text',
                placeholder: parameters.placeholder,
                value: parameters.defaultValue,
                id: "".concat(componentId, "-input")
            }
        ]
    });
    if (parameters.iconAfter) {
        columnSet.columns.push({
            type: 'Column',
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            width: '16px',
            spacing: 'none',
            items: [
                {
                    type: 'Icon',
                    iconProperty: '${iconAfterProperty}',
                    altText: '${iconAfterAltText}'
                }
            ]
        });
    }
    if (parameters.button) {
        var button = parameters.button;
        var iconButton = button;
        if (iconButton === null || iconButton === void 0 ? void 0 : iconButton.icon) {
            columnSet.columns.push({
                type: 'Column',
                width: 24,
                spacing: 'small',
                items: [
                    {
                        type: 'Icon',
                        iconProperty: '${buttonIconProperty}',
                        altText: '${buttonIconAltText}'
                    }
                ],
                selectAction: (0, actionButtonHelper_1.createAction)(button.action, button.id || "".concat(componentId, "-input-button"))
            });
        }
        else {
            var titleButton = button;
            columnSet.columns.push({
                type: 'Column',
                width: 'auto',
                spacing: 'small',
                items: [
                    {
                        type: 'ActionSet',
                        actions: [
                            (0, actionButtonHelper_1.createAction)(titleButton.action, titleButton.id || "".concat(componentId, "-input-button"), titleButton.title, 'positive')
                        ]
                    }
                ]
            });
        }
    }
    return columnSet;
};
exports.TEXT_INPUT = TEXT_INPUT;
var SEARCH_BOX = function (parameters, componentId) {
    var columnSet = {
        type: 'ColumnSet',
        columns: []
    };
    columnSet.columns.push({
        type: 'Column',
        width: 'stretch',
        spacing: 'none',
        items: [
            {
                type: 'Input.Text',
                placeholder: parameters.placeholder,
                value: parameters.defaultValue,
                id: "".concat(componentId, "-searchbox")
            }
        ]
    });
    var button = parameters.button;
    columnSet.columns.push({
        type: 'Column',
        width: 'auto',
        spacing: 'small',
        items: [
            {
                type: 'ActionSet',
                actions: [
                    (0, actionButtonHelper_1.createAction)(button.action, button.id || "".concat(componentId, "-searchbox-button"), Strings_resx_1.default.Search, 'positive')
                ]
            }
        ]
    });
    return columnSet;
};
exports.SEARCH_BOX = SEARCH_BOX;
var SEARCH_FOOTER = function (parameters, componentId) {
    var columnSet = {
        type: 'ColumnSet',
        columns: [],
        selectAction: parameters.onSelection ? (0, actionButtonHelper_1.createAction)(parameters.onSelection, componentId) : undefined
    };
    columnSet.columns.push({
        type: 'Column',
        width: 'auto',
        items: [
            {
                type: 'Image',
                style: 'Person',
                url: '${footerImageUrl}',
                // eslint-disable-next-line @typescript-eslint/no-explicit-any
                height: '24px',
                width: '24px'
            }
        ]
    });
    columnSet.columns.push({
        type: 'Column',
        width: 'stretch',
        items: [
            {
                type: 'TextBlock',
                weight: 'Bolder',
                text: '${footerText}',
                wrap: false
            }
        ]
    });
    var container = {
        type: 'Container',
        items: []
    };
    container.items.push({
        type: 'TextBlock',
        text: '${footerTitle}',
        wrap: false,
        size: 'Small',
        isSubtle: true
    });
    container.items.push(columnSet);
    return container;
};
exports.SEARCH_FOOTER = SEARCH_FOOTER;
//# sourceMappingURL=CustomElements.js.map