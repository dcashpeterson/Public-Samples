import { ChannelAdapter } from "./channel-adapter";
import { IActivityRequest, SuccessResponse, ErrorResponse } from "./activity-request";
import { ExecuteAction, SerializationContext, AdaptiveCard, Action, TokenExchangeResource, AuthCardButton } from "./card-elements";
import { HostConfig } from "./host-config";
export declare class AdaptiveApplet {
    private static readonly submitMagicCodeActionId;
    private static readonly cancelMagicCodeAuthActionId;
    private _card?;
    private _cardPayload;
    private _allowAutomaticCardUpdate;
    private _refreshButtonHostElement;
    private _cardHostElement;
    private _progressOverlay?;
    private displayCard;
    private showManualRefreshButton;
    private createActivityRequest;
    private createMagicCodeInputCard;
    private cancelAutomaticRefresh;
    private createSerializationContext;
    private internalSetCard;
    private internalExecuteAction;
    private createProgressOverlay;
    private removeProgressOverlay;
    private activityRequestSucceeded;
    private activityRequestFailed;
    private showAuthCodeInputDialog;
    private internalSendActivityRequestAsync;
    readonly renderedElement: HTMLElement;
    hostConfig?: HostConfig;
    channelAdapter?: ChannelAdapter;
    onCardChanging?: (sender: AdaptiveApplet, card: any) => boolean;
    onCardChanged?: (sender: AdaptiveApplet) => void;
    onPrefetchSSOToken?: (sender: AdaptiveApplet, tokenExchangeResource: TokenExchangeResource) => void;
    onSSOTokenNeeded?: (sender: AdaptiveApplet, request: IActivityRequest, tokenExchangeResource: TokenExchangeResource) => boolean;
    onPrepareActivityRequest?: (sender: AdaptiveApplet, request: IActivityRequest, action: ExecuteAction) => boolean;
    onActivityRequestSucceeded?: (sender: AdaptiveApplet, response: SuccessResponse, parsedContent: string | AdaptiveCard | undefined) => void;
    onActivityRequestFailed?: (sender: AdaptiveApplet, response: ErrorResponse) => number;
    onCreateSerializationContext?: (sender: AdaptiveApplet) => SerializationContext;
    onCreateProgressOverlay?: (sender: AdaptiveApplet, request: IActivityRequest) => HTMLElement | undefined;
    onRemoveProgressOverlay?: (sender: AdaptiveApplet, request: IActivityRequest) => void;
    onRenderManualRefreshButton?: (sender: AdaptiveApplet) => HTMLElement | undefined;
    onAction?: (sender: AdaptiveApplet, action: Action) => void;
    onShowManualRefreshButton?: (sender: AdaptiveApplet) => boolean;
    onShowAuthCodeInputDialog?: (sender: AdaptiveApplet, request: IActivityRequest) => boolean;
    onShowSigninPrompt?: (sender: AdaptiveApplet, request: IActivityRequest, signinButton: AuthCardButton) => void;
    constructor();
    refreshCard(): void;
    setCard(payload: any): void;
    get card(): AdaptiveCard | undefined;
}
