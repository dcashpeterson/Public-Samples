/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ 657147:
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ 371017:
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!********************************************!*\
  !*** ./lib-esnext/scripts/create-links.js ***!
  \********************************************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ 657147);
/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ 371017);
/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);
// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.
// See LICENSE in the project root for license information.
// THIS SCRIPT IS GENERATED BY THE "rush deploy" COMMAND.
/* eslint-disable no-console */


// API borrowed from @rushstack/node-core-library, since this script avoids using any
// NPM dependencies.
class FileSystem {
    static createSymbolicLinkJunction(options) {
        fs__WEBPACK_IMPORTED_MODULE_0__.symlinkSync(options.linkTargetPath, options.newLinkPath, 'junction');
    }
    static createSymbolicLinkFile(options) {
        fs__WEBPACK_IMPORTED_MODULE_0__.symlinkSync(options.linkTargetPath, options.newLinkPath, 'file');
    }
    static createSymbolicLinkFolder(options) {
        fs__WEBPACK_IMPORTED_MODULE_0__.symlinkSync(options.linkTargetPath, options.newLinkPath, 'dir');
    }
    static createHardLink(options) {
        fs__WEBPACK_IMPORTED_MODULE_0__.linkSync(options.linkTargetPath, options.newLinkPath);
    }
}
function ensureFolder(folderPath) {
    if (!folderPath) {
        return;
    }
    if (fs__WEBPACK_IMPORTED_MODULE_0__.existsSync(folderPath)) {
        return;
    }
    const parentPath = path__WEBPACK_IMPORTED_MODULE_1__.dirname(folderPath);
    if (parentPath && parentPath !== folderPath) {
        ensureFolder(parentPath);
    }
    fs__WEBPACK_IMPORTED_MODULE_0__.mkdirSync(folderPath);
}
function removeLinks(targetRootFolder, extractorMetadataObject) {
    for (const linkInfo of extractorMetadataObject.links) {
        // Link to the relative path for symlinks
        const newLinkPath = path__WEBPACK_IMPORTED_MODULE_1__.join(targetRootFolder, linkInfo.linkPath);
        if (fs__WEBPACK_IMPORTED_MODULE_0__.existsSync(newLinkPath)) {
            fs__WEBPACK_IMPORTED_MODULE_0__.unlinkSync(newLinkPath);
        }
    }
}
function createLinks(targetRootFolder, extractorMetadataObject) {
    for (const linkInfo of extractorMetadataObject.links) {
        // Link to the relative path for symlinks
        const newLinkPath = path__WEBPACK_IMPORTED_MODULE_1__.join(targetRootFolder, linkInfo.linkPath);
        const linkTargetPath = path__WEBPACK_IMPORTED_MODULE_1__.join(targetRootFolder, linkInfo.targetPath);
        // Make sure the containing folder exists
        ensureFolder(path__WEBPACK_IMPORTED_MODULE_1__.dirname(newLinkPath));
        // NOTE: This logic is based on NpmLinkManager._createSymlink()
        if (process.platform === 'win32') {
            if (linkInfo.kind === 'folderLink') {
                // For directories, we use a Windows "junction".  On Unix, this produces a regular symlink.
                FileSystem.createSymbolicLinkJunction({ newLinkPath, linkTargetPath });
            }
            else {
                // For files, we use a Windows "hard link", because creating a symbolic link requires
                // administrator permission.
                // NOTE: We cannot use the relative path for hard links
                FileSystem.createHardLink({ newLinkPath, linkTargetPath });
            }
        }
        else {
            // However hard links seem to cause build failures on Mac, so for all other operating systems
            // we use symbolic links for this case.
            if (linkInfo.kind === 'folderLink') {
                FileSystem.createSymbolicLinkFolder({ newLinkPath, linkTargetPath });
            }
            else {
                FileSystem.createSymbolicLinkFile({ newLinkPath, linkTargetPath });
            }
        }
    }
}
function showUsage() {
    console.log('Usage:');
    console.log('  node create-links.js create');
    console.log('  node create-links.js remove');
    console.log('\nCreates or removes the symlinks for the output folder created by "rush deploy".');
    console.log('The link information is read from "extractor-metadata.json" in the same folder.');
}
function main() {
    // Example: [ "node.exe", "create-links.js", ""create" ]
    const args = process.argv.slice(2);
    if (args.length !== 1 || (args[0] !== 'create' && args[0] !== 'remove')) {
        showUsage();
        return false;
    }
    const targetRootFolder = __dirname;
    const extractorMetadataPath = path__WEBPACK_IMPORTED_MODULE_1__.join(targetRootFolder, 'extractor-metadata.json');
    if (!fs__WEBPACK_IMPORTED_MODULE_0__.existsSync(extractorMetadataPath)) {
        throw new Error('Input file not found: ' + extractorMetadataPath);
    }
    const extractorMetadataJson = fs__WEBPACK_IMPORTED_MODULE_0__.readFileSync(extractorMetadataPath).toString();
    const extractorMetadataObject = JSON.parse(extractorMetadataJson);
    if (args[0] === 'create') {
        console.log(`\nCreating links for extraction at path "${targetRootFolder}"`);
        removeLinks(targetRootFolder, extractorMetadataObject);
        createLinks(targetRootFolder, extractorMetadataObject);
    }
    else {
        console.log(`\nRemoving links for extraction at path "${targetRootFolder}"`);
        removeLinks(targetRootFolder, extractorMetadataObject);
    }
    console.log('The operation completed successfully.');
    return true;
}
try {
    process.exitCode = 1;
    if (main()) {
        process.exitCode = 0;
    }
}
catch (error) {
    console.log('ERROR: ' + error);
}
//# sourceMappingURL=create-links.js.map
})();

module.exports = __webpack_exports__;
/******/ })()
;
//# sourceMappingURL=create-links.js.map