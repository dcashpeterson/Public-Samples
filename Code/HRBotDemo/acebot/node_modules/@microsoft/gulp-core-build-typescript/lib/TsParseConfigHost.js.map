{"version":3,"file":"TsParseConfigHost.js","sourceRoot":"","sources":["../src/TsParseConfigHost.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAG3D,oEAA0D;AAE1D;;GAEG;AACH,MAAa,iBAAiB;IAA9B;QACS,8BAAyB,GAAY,KAAK,CAAC;IAkBpD,CAAC;IAhBQ,aAAa,CAClB,OAAe,EACf,UAAoB,EACpB,QAAkB,EAClB,QAAkB;QAElB,OAAO,8BAAU,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IACxC,CAAC;IAEM,UAAU,CAAC,IAAY;QAC5B,OAAO,8BAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAEM,QAAQ,CAAC,IAAY;QAC1B,OAAO,8BAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;CACF;AAnBD,8CAmBC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as TTypescript from 'typescript';\r\nimport { FileSystem } from '@rushstack/node-core-library';\r\n\r\n/**\r\n * Used as a helper to parse tsconfig.json files.\r\n */\r\nexport class TsParseConfigHost implements TTypescript.ParseConfigHost {\r\n  public useCaseSensitiveFileNames: boolean = false;\r\n\r\n  public readDirectory(\r\n    rootDir: string,\r\n    extensions: string[],\r\n    excludes: string[],\r\n    includes: string[]\r\n  ): string[] {\r\n    return FileSystem.readFolder(rootDir);\r\n  }\r\n\r\n  public fileExists(path: string): boolean {\r\n    return FileSystem.exists(path);\r\n  }\r\n\r\n  public readFile(path: string): string {\r\n    return FileSystem.readFile(path);\r\n  }\r\n}\r\n"]}