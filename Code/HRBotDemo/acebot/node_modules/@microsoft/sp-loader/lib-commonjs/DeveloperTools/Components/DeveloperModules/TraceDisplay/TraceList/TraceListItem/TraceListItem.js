"use strict";
/**
 * Sub-component for TraceList. One of these exists for each row in the table.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var TraceListItem_module_scss_1 = tslib_1.__importDefault(require("./TraceListItem.module.scss"));
var TraceDisplayStore_1 = require("../../../../../Stores/TraceDisplayStore");
var traceFormatting_1 = require("../traceFormatting");
var TraceListItem = /** @class */ (function (_super) {
    tslib_1.__extends(TraceListItem, _super);
    function TraceListItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TraceListItem.prototype.render = function () {
        var styleDeclarations = [TraceListItem_module_scss_1.default.container];
        if (this.props.id % 2 === 0) {
            styleDeclarations.push(TraceListItem_module_scss_1.default.blueBackground);
        }
        // Message property is a different property for Error logs.
        // @todo (SPPPlat VSO bug #259565) The Number casting is a workaround for a TypeScript bug.
        var message;
        if (Number(this.props.trace.level) === TraceDisplayStore_1.LogLevel.error) {
            message = this.props.trace.error ? this.props.trace.error.message : this.props.trace.message;
            styleDeclarations.push(TraceListItem_module_scss_1.default.redText);
        }
        else {
            message = this.props.trace.message;
        }
        return (React.createElement("li", { key: this.props.id, className: styleDeclarations.join(' ') },
            React.createElement("ul", { className: TraceListItem_module_scss_1.default.itemDetails },
                React.createElement("li", { className: TraceListItem_module_scss_1.default.timestamp }, (0, traceFormatting_1.formatTimestamp)(this.props.trace.timestamp)),
                React.createElement("li", { className: TraceListItem_module_scss_1.default[TraceDisplayStore_1.LogLevel[this.props.trace.level]] }, TraceDisplayStore_1.LogLevel[this.props.trace.level]),
                React.createElement("li", { className: TraceListItem_module_scss_1.default.scope }, this.props.trace.scope ? this.props.trace.scope.id : undefined),
                React.createElement("li", { className: TraceListItem_module_scss_1.default.source }, this.props.trace.source),
                React.createElement("li", { className: TraceListItem_module_scss_1.default.message }, message))));
    };
    return TraceListItem;
}(React.Component));
exports.default = TraceListItem;
//# sourceMappingURL=TraceListItem.js.map