"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved.
Object.defineProperty(exports, "__esModule", { value: true });
exports.IconPickerPreview = void 0;
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var IconPicker_1 = require("../iconPicker/IconPicker");
var ThumbnailRenderer_1 = require("../../../propertyPaneThumbnailPickerShared/thumbnailRenderer/ThumbnailRenderer");
var ThumbnailPickerUtils_1 = require("../../../propertyPaneThumbnailPickerShared/ThumbnailPickerUtils");
var IconPickerPreview_module_scss_1 = tslib_1.__importDefault(require("./IconPickerPreview.module.scss"));
var IconPickerPreview = /** @class */ (function (_super) {
    tslib_1.__extends(IconPickerPreview, _super);
    function IconPickerPreview() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._setInstanceRef = function (instance) {
            _this._iconPicker = instance;
        };
        _this._handleClick = function () {
            if (_this._iconPicker) {
                _this._iconPicker.open(_this.props.thumbnail.iconName);
            }
        };
        _this._renderCustomIcon = function () {
            return _this.props.customIconSet.get(_this.props.customSelectedIconName);
        };
        return _this;
    }
    IconPickerPreview.prototype.render = function () {
        return (React.createElement("div", { className: IconPickerPreview_module_scss_1.default.root },
            React.createElement(ThumbnailRenderer_1.ThumbnailRenderer, { key: this.props.thumbnail.iconName +
                    (this.props.customSelectedIconName || ''), thumbnail: this.props.thumbnail, previewFullWidth: this.props.previewFullWidth, previewGrayBackground: this.props.previewGrayBackground, wrapperClassName: this.props.thumbnailRendererWrapperClassName, iconClassName: this.props.thumbnailRendererIconClassName, qosPrefix: this.props.qosPrefix, onRenderThumbnail: this.props.customIconSet && this.props.customSelectedIconName ? this._renderCustomIcon : undefined }),
            (0, ThumbnailPickerUtils_1.getIconPickerButtons)(this._handleClick, this.props.onItemDeleted, IconPickerPreview_module_scss_1.default.changeButton, 'iconPicker'),
            React.createElement(IconPicker_1.IconPicker, { ref: this._setInstanceRef, onSelect: this.props.onItemChanged, customIconSet: this.props.customIconSet })));
    };
    return IconPickerPreview;
}(React.PureComponent));
exports.IconPickerPreview = IconPickerPreview;
//# sourceMappingURL=IconPickerPreview.js.map