import type { ILocalizedPathModuleConfiguration, IModuleConfiguration, IPathModuleConfiguration } from './manifestSchemas/IClientSideComponentLoaderConfiguration';
import type { IClientSideComponentManifest } from './manifestSchemas/IClientSideComponentManifest';
import type { IClientSideMultiVersionManifest } from './manifestSchemas/IClientSideMultiVersionManifest';
/**
 * Identifies if a component manifest is a multi-version manifest.
 * @param manifest - The manifest for a component, which may have multiple versions
 * @returns If the manifest has multiple versions
 */
export declare function isMultiVersionManifest(manifest: IClientSideComponentManifest | IClientSideMultiVersionManifest<IClientSideComponentManifest>): manifest is IClientSideMultiVersionManifest<IClientSideComponentManifest>;
/**
 * @param config - The module loader configuration for the module.
 * @returns If the module loads as a localized path.
 */
export declare function isLocalizedPath(config: IModuleConfiguration): config is ILocalizedPathModuleConfiguration;
/**
 * @param config - The module loader configuration for the module.
 * @returns If the module loads as a non-localized path.
 */
export declare function isPath(config: IModuleConfiguration): config is IPathModuleConfiguration;
//# sourceMappingURL=manifestHelpers.d.ts.map