"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ComponentNamePlugin = void 0;
const PLUGIN_NAME = 'component-name';
const DEFINE_REGEXP = /^(.*define\()((?:"[^"]*",\s*)?)(.+)/;
/**
 * @internal
 */
class ComponentNamePlugin {
    constructor(options) {
        this._options = options;
    }
    apply(compiler) {
        compiler.hooks.compilation.tap(PLUGIN_NAME, (compilation) => {
            compilation.mainTemplate.hooks.renderWithEntry.tap(PLUGIN_NAME, (source, chunk) => {
                const firstSource = source.children[0];
                if (typeof firstSource === 'string') {
                    // We expect the AMD module declaration to be a string
                    const matches = firstSource.match(DEFINE_REGEXP);
                    if (matches) {
                        const [, preamble, name, postamble] = matches;
                        const updatedName = this._options.getLibraryNameForChunk(chunk, name);
                        if (!updatedName) {
                            source.children[0] = preamble + postamble;
                        }
                        else if (updatedName !== name) {
                            source.children[0] = `${preamble}${JSON.stringify(updatedName)}, ${postamble}`;
                        }
                    }
                }
            });
        });
    }
}
exports.ComponentNamePlugin = ComponentNamePlugin;
//# sourceMappingURL=ComponentNamePlugin.js.map