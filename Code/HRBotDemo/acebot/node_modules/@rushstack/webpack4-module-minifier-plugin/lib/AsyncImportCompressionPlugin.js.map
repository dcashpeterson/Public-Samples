{"version":3,"file":"AsyncImportCompressionPlugin.js","sourceRoot":"","sources":["../src/AsyncImportCompressionPlugin.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;;;;AAE3D,sDAA8D;AAI9D,MAAM,EAAE,QAAQ,EAAE,GAAG,iBAAO,CAAC;AAE7B,2CAA0C;AAO1C,MAAM,WAAW,GAAmC,8BAA8B,CAAC;AAEnF,MAAM,SAAS,GAAuB;IACpC,IAAI,EAAE,WAAW;IACjB,KAAK,EAAE,uBAAW;CACnB,CAAC;AAEF,MAAM,mBAAmB,GAAqB,gBAAgB,CAAC;AAC/D,MAAM,kBAAkB,GAAW,uBAAuB,CAAC;AA8B3D,SAAS,mBAAmB,CAAC,WAA4C;IACvE,KAAK,MAAM,GAAG,IAAI,WAAW,CAAC,mBAAmB,CAAC,IAAI,EAAE,EAAE;QACxD,IAAI,GAAG,CAAC,IAAI,KAAK,kBAAkB,EAAE;YACnC,OAAO,GAAgD,CAAC;SACzD;KACF;IAED,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;AACtD,CAAC;AAED,SAAS,uBAAuB,CAC9B,MAAkC,EAClC,YAAwC;;IAExC,MAAM,WAAW,GAAuB,MAAA,MAAM,CAAC,SAAS,0CAAE,WAAW,CAAC;IACtE,MAAM,MAAM,GAAwB,MAAA,YAAY,CAAC,SAAS,0CAAE,mBAAmB,CAAC;IAEhF,yBAAyB;IACzB,oHAAoH;IACpH,IAAI,WAAW,KAAK,WAAW,EAAE;QAC/B,8BAA8B;QAC9B,OAAO,EAAE,CAAC;KACX;SAAM,IAAI,WAAW,KAAK,OAAO,EAAE;QAClC,wDAAwD;QACxD,OAAO,IAAI,CAAC;KACb;SAAM,IAAI,MAAM,EAAE;QACjB,2BAA2B;QAC3B,OAAO,IAAI,CAAC;KACb;SAAM;QACL,sHAAsH;QACtH,OAAO,IAAI,CAAC;KACb;AACH,CAAC;AAED,SAAS,4BAA4B,CAAC,KAAgC;IACpE,KAAK,MAAM,UAAU,IAAI,KAAK,CAAC,cAAc,EAAE;QAC7C,IAAI,UAAU,CAAC,mBAAmB,EAAE,GAAG,CAAC,EAAE;YACxC,OAAO,IAAI,CAAC;SACb;KACF;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAED;;;;;GAKG;AACH,MAAa,4BAA4B;IAGvC,YAAmB,aAAyC;QAC1D,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;IACtC,CAAC;IAEM,KAAK,CAAC,QAAkB;QAC7B,MAAM,cAAc,GAAuE,IAAI,GAAG,EAAE,CAAC;QACrG,MAAM,iBAAiB,GAAsC,IAAI,GAAG,EAAE,CAAC;QACvE,IAAI,kBAAsD,CAAC;QAE3D,IAAI,CAAC,cAAc,CAAC,uBAAuB,CAAC,GAAG,CAC7C;YACE,IAAI,EAAE,WAAW;YACjB,KAAK,EAAE,CAAC,CAAC;SACV,EACD,CAAC,MAAqB,EAAE,OAAoC,EAAE,EAAE;YAC9D,MAAM,IAAI,GAAW,MAAM,CAAC,QAAQ,EAAE,CAAC,MAAM,EAAY,CAAC;YAE1D,IAAI,YAA2D,CAAC;YAEhE,kBAAkB,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;YAClC,mEAAmE;YACnE,IAAI,KAAK,GAA2B,IAAI,CAAC;YACzC,OAAO,CAAC,KAAK,GAAG,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;gBAC9C,MAAM,KAAK,GAAW,KAAK,CAAC,CAAC,CAAC,CAAC;gBAE/B,IAAI,CAAC,YAAY,EAAE;oBACjB,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;wBACnB,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAC7B,IAAI,KAAK,CAAC,2BAA2B,KAAK,0BAA0B,OAAO,CAAC,WAAW,EAAE,CAAC,CAC3F,CAAC;wBACF,OAAO,MAAM,CAAC;qBACf;oBAED,YAAY,GAAG,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;oBAClD,IAAI,CAAC,YAAY,EAAE;wBACjB,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAC7B,IAAI,KAAK,CAAC,2BAA2B,KAAK,cAAc,OAAO,CAAC,WAAW,EAAE,CAAC,CAC/E,CAAC;wBACF,OAAO,MAAM,CAAC;qBACf;iBACF;gBAED,MAAM,WAAW,GAAqC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAC9E,IAAI,CAAC,WAAW,EAAE;oBAChB,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAC7B,IAAI,KAAK,CAAC,wBAAwB,KAAK,cAAc,OAAO,CAAC,WAAW,EAAE,CAAC,CAC5E,CAAC;oBACF,OAAO,MAAM,CAAC;iBACf;gBACD,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,WAAW,CAAC;gBAErC,MAAM,eAAe,GAAW,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;gBAEjG,MAAM,MAAM,GAAgC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAChF,MAAM,CAAC,EAAG,EACV,OAAO,CAAC,WAAW,CACpB,CAAC;gBACF,MAAM,MAAM,GAAoB,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,EAAG,CAAC,CAAC,CAAC,MAAM,CAAC;gBAE3E,2FAA2F;gBAC3F,MAAM,CAAC,OAAO,CACZ,KAAK,CAAC,KAAK,EACX,kBAAkB,CAAC,SAAS,GAAG,CAAC,EAChC,GAAG,eAAe,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,uBAAuB,CAAC,MAAM,EAAE,OAAO,CAAC,MAAO,CAAC,EAAE,CAClG,CAAC;aACH;YAED,OAAO,MAAM,CAAC;QAChB,CAAC,CACF,CAAC;QAEF,QAAQ,CAAC,KAAK,CAAC,eAAe,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,WAA4C,EAAE,EAAE;YAC/F,cAAc,CAAC,KAAK,EAAE,CAAC;YACvB,iBAAiB,CAAC,KAAK,EAAE,CAAC;YAE1B,WAAW,CAAC,KAAK,CAAC,iBAAiB,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,EAAE;gBACtD,MAAM,gBAAgB,GAAmC,mBAAmB,CAAC,WAAW,CAAC,CAAC;gBAE1F,KAAK,MAAM,MAAM,IAAI,WAAW,CAAC,OAAO,EAAE;oBACxC,MAAM,SAAS,GAAsB,MAAM,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC;oBAEhE,KAAK,MAAM,KAAK,IAAI,SAAS,EAAE;wBAC7B,KAAK,CAAC,eAAe,CAAC,CAAC,GAAmC,EAAE,EAAE;4BAC5D,IAAI,GAAG,YAAY,gBAAgB,EAAE;gCACnC,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,GAAG,GAAG,CAAC;gCAErC,IAAI,YAAY,EAAE;oCAChB,IAAI,iBAAiB,GACnB,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;oCAC7B,IAAI,CAAC,iBAAiB,EAAE;wCACtB,cAAc,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,iBAAiB,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC;qCAC7D;oCAED,MAAM,UAAU,GAAmC,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC;oCACxE,MAAM,QAAQ,GAAa,UAAU;wCACnC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,EAAG,CAAC,CAAC,IAAI,EAAE;wCACpD,CAAC,CAAC,EAAE,CAAC;oCACP,MAAM,QAAQ,GAAW,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oCAE5C,IAAI,IAAI,GAAqC,iBAAiB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oCAC7E,IAAI,CAAC,IAAI,EAAE;wCACT,iBAAiB,CAAC,GAAG,CACnB,QAAQ,EACR,CAAC,IAAI,GAAG;4CACN,UAAU,EAAE,QAAQ,CAAC,MAAM;4CAC3B,QAAQ,EAAE,QAAQ;4CAClB,KAAK,EAAE,CAAC;4CACR,KAAK,EAAE,CAAC,CAAC;yCACV,CAAC,CACH,CAAC;qCACH;oCACD,IAAI,CAAC,KAAK,EAAE,CAAC;oCAEb,MAAM,SAAS,GAAW,GAAG,YAAY,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;oCAE/E,MAAM,GAAG,GAAW,GAAG,mBAAmB,GAAG,SAAS,EAAE,CAAC;oCACzD,iBAAiB,CAAC,GAAG,CAAC,GAAG,EAAE;wCACzB,IAAI;wCACJ,MAAM,EAAE,YAAY;qCACrB,CAAC,CAAC;iCACJ;6BACF;wBACH,CAAC,CAAC,CAAC;qBACJ;iBACF;gBAED,MAAM,aAAa,GAAqC,CAAC,GAAG,iBAAiB,CAAC;qBAC3E,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;qBAC7B,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;oBACb,IAAI,IAAI,GAAW,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;oBAC3C,IAAI,CAAC,IAAI,EAAE;wBACT,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;qBAC1C;oBAED,IAAI,CAAC,IAAI,EAAE;wBACT,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC/C;oBAED,OAAO,IAAI,CAAC;gBACd,CAAC,CAAC,CAAC;gBAEL,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,GAAG,GAAW,aAAa,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;oBACxE,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;oBAC9B,iCAAiC;iBAClC;gBAED,kBAAkB,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAEpD,MAAM,EAAE,mBAAmB,EAAE,GAAG,WAAW,CAAC;gBAE5C,MAAM,qBAAqB,GAA0C,mBAAmB,CAAC,GAAG,CAC1F,gBAAgB,CACuB,CAAC;gBAC1C,IAAI,CAAC,qBAAqB,EAAE;oBAC1B,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC,CAAC;iBAC/E;gBAED,MAAM,cAAc,GAA8B;oBAChD,KAAK,CACH,GAA4B,EAC5B,MAAqB,EACrB,OAA4C;wBAE5C,IAAI,GAAG,CAAC,MAAM,EAAE;4BACd,MAAM,SAAS,GAAW,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;4BAC7E,MAAM,GAAG,GAAW,GAAG,mBAAmB,GAAG,SAAS,EAAE,CAAC;4BACzD,MAAM,OAAO,GAAW,0BAA0B,GAAG,GAAG,CAAC;4BACzD,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC;yBACrE;6BAAM;4BACL,qBAAqB,aAArB,qBAAqB,uBAArB,qBAAqB,CAAE,KAAK,CAAC,GAAG,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;yBACpD;oBACH,CAAC;iBACF,CAAC;gBAEF,iEAAiE;gBACjE,wEAAwE;gBACxE,mBAAmB,CAAC,GAAG,CAAC,gBAAgB,EAAE,cAAoC,CAAC,CAAC;YAClF,CAAC,CAAC,CAAC;YAEH,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC,iBAAiB,CAAC,GAAG,CAClD,WAAW,EACX,CAAC,MAAc,EAAE,KAAgC,EAAE,EAAE;gBACnD,IAAI,CAAC,4BAA4B,CAAC,KAAK,CAAC,EAAE;oBACxC,OAAO,MAAM,CAAC;iBACf;gBAED,MAAM,EAAE,SAAS,EAAE,GAAG,WAAW,CAAC,YAAY,CAAC;gBAC/C,OAAO,QAAQ,CAAC,QAAQ,CAAC;oBACvB,gCAAgC;oBAChC,kBAAkB;wBAChB,CAAC,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;wBACxF,CAAC,CAAC,EAAE;oBACN,IAAI;oBACJ,GAAG,SAAS,oDAAoD;oBAChE,QAAQ,CAAC,MAAM,CAAC;wBACd,2HAA2H,SAAS,YAAY;wBAChJ,sBAAsB,SAAS,oCAAoC,SAAS,qBAAqB;qBAClG,CAAC;oBACF,IAAI;oBACJ,MAAM;iBACP,CAAC,CAAC;YACL,CAAC,CACF,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAhND,oEAgNC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport webpack, { type Compiler, type Plugin } from 'webpack';\nimport type { ReplaceSource } from 'webpack-sources';\nimport type { Tapable, TapOptions } from 'tapable';\n\nconst { Template } = webpack;\n\nimport { STAGE_AFTER } from './Constants';\nimport type {\n  IExtendedModule,\n  IModuleMinifierPluginHooks,\n  IPostProcessFragmentContext\n} from './ModuleMinifierPlugin.types';\n\nconst PLUGIN_NAME: 'AsyncImportCompressionPlugin' = 'AsyncImportCompressionPlugin';\n\nconst TAP_AFTER: TapOptions<'sync'> = {\n  name: PLUGIN_NAME,\n  stage: STAGE_AFTER\n};\n\nconst ASYNC_IMPORT_PREFIX: '__IMPORT_ASYNC' = '__IMPORT_ASYNC';\nconst ASYNC_IMPORT_REGEX: RegExp = /__IMPORT_ASYNC[^\\)]+/g;\n\ndeclare class WebpackImportDependency extends webpack.compilation.Dependency {\n  public module: webpack.compilation.Module;\n  public block: {\n    chunkGroup: webpack.compilation.ChunkGroup;\n    range: [number, number];\n  };\n}\n\ninterface IImportDependencyTemplate {\n  apply(\n    dependency: WebpackImportDependency,\n    source: ReplaceSource,\n    runtime: webpack.compilation.RuntimeTemplate\n  ): void;\n}\n\ninterface IAsyncImportMetadata {\n  chunkCount: number;\n  chunkIds: number[];\n  count: number;\n  index: number;\n}\n\ninterface ILocalImportMetadata {\n  meta: IAsyncImportMetadata;\n  module: webpack.compilation.Module;\n}\n\nfunction getImportDependency(compilation: webpack.compilation.Compilation): typeof WebpackImportDependency {\n  for (const key of compilation.dependencyTemplates.keys()) {\n    if (key.name === 'ImportDependency') {\n      return key as unknown as typeof WebpackImportDependency;\n    }\n  }\n\n  throw new Error(`Could not find ImportDependency!`);\n}\n\nfunction getImportTypeExpression(\n  module: webpack.compilation.Module,\n  originModule: webpack.compilation.Module\n): string {\n  const exportsType: string | undefined = module.buildMeta?.exportsType;\n  const strict: boolean | undefined = originModule.buildMeta?.strictHarmonyModule;\n\n  // Logic translated from:\n  // https://github.com/webpack/webpack/blob/3956274f1eada621e105208dcab4608883cdfdb2/lib/RuntimeTemplate.js#L110-L122\n  if (exportsType === 'namespace') {\n    // Use the raw module directly\n    return '';\n  } else if (exportsType === 'named') {\n    // Create a new namespace object and forward all exports\n    return ',3';\n  } else if (strict) {\n    // Synthetic default export\n    return ',1';\n  } else {\n    // If modules is marked __esModule, return raw module, otherwise create a new namespace object and forward all exports\n    return ',7';\n  }\n}\n\nfunction needChunkOnDemandLoadingCode(chunk: webpack.compilation.Chunk): boolean {\n  for (const chunkGroup of chunk.groupsIterable) {\n    if (chunkGroup.getNumberOfChildren() > 0) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Plugin that replaces `Promise.all([__webpack_require__.e(1), __webpack_require__.e(12)]).then(__webpack_require__.t.bind(123,7))`\n * with more concise expressions like `__webpack_require__.ee([1,12],123,7)`, etc.\n *\n * Also ensures that the code seen by the minifier does not contain chunk ids, and is therefore portable across chunks/compilations.\n */\nexport class AsyncImportCompressionPlugin implements Plugin {\n  private readonly _minifierHooks: IModuleMinifierPluginHooks;\n\n  public constructor(minifierHooks: IModuleMinifierPluginHooks) {\n    this._minifierHooks = minifierHooks;\n  }\n\n  public apply(compiler: Compiler): void {\n    const asyncImportMap: Map<webpack.compilation.Module, Map<string, ILocalImportMetadata>> = new Map();\n    const asyncImportGroups: Map<string, IAsyncImportMetadata> = new Map();\n    let rankedImportGroups: IAsyncImportMetadata[] | undefined;\n\n    this._minifierHooks.postProcessCodeFragment.tap(\n      {\n        name: PLUGIN_NAME,\n        stage: -1\n      },\n      (source: ReplaceSource, context: IPostProcessFragmentContext) => {\n        const code: string = source.original().source() as string;\n\n        let localImports: Map<string, ILocalImportMetadata> | undefined;\n\n        ASYNC_IMPORT_REGEX.lastIndex = -1;\n        // RegExp.exec uses null or an array as the return type, explicitly\n        let match: RegExpExecArray | null = null;\n        while ((match = ASYNC_IMPORT_REGEX.exec(code))) {\n          const token: string = match[0];\n\n          if (!localImports) {\n            if (!context.module) {\n              context.compilation.errors.push(\n                new Error(`Unexpected async import ${token} in non-module context ${context.loggingName}`)\n              );\n              return source;\n            }\n\n            localImports = asyncImportMap.get(context.module);\n            if (!localImports) {\n              context.compilation.errors.push(\n                new Error(`Unexpected async import ${token} in module ${context.loggingName}`)\n              );\n              return source;\n            }\n          }\n\n          const localImport: ILocalImportMetadata | undefined = localImports.get(token);\n          if (!localImport) {\n            context.compilation.errors.push(\n              new Error(`Missing metadata for ${token} in module ${context.loggingName}`)\n            );\n            return source;\n          }\n          const { meta, module } = localImport;\n\n          const chunkExpression: string = meta.index < 0 ? JSON.stringify(meta.chunkIds) : `${meta.index}`;\n\n          const mapped: string | number | undefined = this._minifierHooks.finalModuleId.call(\n            module.id!,\n            context.compilation\n          );\n          const idExpr: string | number = mapped === undefined ? module.id! : mapped;\n\n          // Replace with a reference or array of ideas, the target module id, and the type of import\n          source.replace(\n            match.index,\n            ASYNC_IMPORT_REGEX.lastIndex - 1,\n            `${chunkExpression},${JSON.stringify(idExpr)}${getImportTypeExpression(module, context.module!)}`\n          );\n        }\n\n        return source;\n      }\n    );\n\n    compiler.hooks.thisCompilation.tap(PLUGIN_NAME, (compilation: webpack.compilation.Compilation) => {\n      asyncImportMap.clear();\n      asyncImportGroups.clear();\n\n      compilation.hooks.beforeChunkAssets.tap(TAP_AFTER, () => {\n        const ImportDependency: typeof WebpackImportDependency = getImportDependency(compilation);\n\n        for (const module of compilation.modules) {\n          const toProcess: IExtendedModule[] = module.modules || [module];\n\n          for (const child of toProcess) {\n            child.hasDependencies((dep: webpack.compilation.Dependency) => {\n              if (dep instanceof ImportDependency) {\n                const { module: targetModule } = dep;\n\n                if (targetModule) {\n                  let localAsyncImports: Map<string, ILocalImportMetadata> | undefined =\n                    asyncImportMap.get(module);\n                  if (!localAsyncImports) {\n                    asyncImportMap.set(module, (localAsyncImports = new Map()));\n                  }\n\n                  const chunkGroup: webpack.compilation.ChunkGroup = dep.block.chunkGroup;\n                  const chunkIds: number[] = chunkGroup\n                    ? chunkGroup.chunks.map((chunk) => chunk.id!).sort()\n                    : [];\n                  const idString: string = chunkIds.join(';');\n\n                  let meta: IAsyncImportMetadata | undefined = asyncImportGroups.get(idString);\n                  if (!meta) {\n                    asyncImportGroups.set(\n                      idString,\n                      (meta = {\n                        chunkCount: chunkIds.length,\n                        chunkIds: chunkIds,\n                        count: 0,\n                        index: -1\n                      })\n                    );\n                  }\n                  meta.count++;\n\n                  const stringKey: string = `${targetModule.id}`.replace(/[^A-Za-z0-9_$]/g, '_');\n\n                  const key: string = `${ASYNC_IMPORT_PREFIX}${stringKey}`;\n                  localAsyncImports.set(key, {\n                    meta,\n                    module: targetModule\n                  });\n                }\n              }\n            });\n          }\n        }\n\n        const rankedImports: [string, IAsyncImportMetadata][] = [...asyncImportGroups]\n          .filter((x) => x[1].count > 1)\n          .sort((x, y) => {\n            let diff: number = y[1].count - x[1].count;\n            if (!diff) {\n              diff = y[1].chunkCount - x[1].chunkCount;\n            }\n\n            if (!diff) {\n              diff = x[0] > y[0] ? 1 : x[0] < y[0] ? -1 : 0;\n            }\n\n            return diff;\n          });\n\n        for (let i: number = 0, len: number = rankedImports.length; i < len; i++) {\n          rankedImports[i][1].index = i;\n          // console.log(rankedImports[i]);\n        }\n\n        rankedImportGroups = rankedImports.map((x) => x[1]);\n\n        const { dependencyTemplates } = compilation;\n\n        const defaultImplementation: IImportDependencyTemplate | undefined = dependencyTemplates.get(\n          ImportDependency\n        ) as unknown as IImportDependencyTemplate;\n        if (!defaultImplementation) {\n          compilation.errors.push(new Error(`Could not find ImportDependencyTemplate`));\n        }\n\n        const customTemplate: IImportDependencyTemplate = {\n          apply(\n            dep: WebpackImportDependency,\n            source: ReplaceSource,\n            runtime: webpack.compilation.RuntimeTemplate\n          ): void {\n            if (dep.module) {\n              const stringKey: string = `${dep.module.id}`.replace(/[^A-Za-z0-9_$]/g, '_');\n              const key: string = `${ASYNC_IMPORT_PREFIX}${stringKey}`;\n              const content: string = `__webpack_require__.ee(${key})`;\n              source.replace(dep.block.range[0], dep.block.range[1] - 1, content);\n            } else {\n              defaultImplementation?.apply(dep, source, runtime);\n            }\n          }\n        };\n\n        // Have to do this after the official plugin in order to override\n        // Typings in webpack are incorrect. This is a DependencyTemplate object\n        dependencyTemplates.set(ImportDependency, customTemplate as unknown as Tapable);\n      });\n\n      compilation.mainTemplate.hooks.requireExtensions.tap(\n        PLUGIN_NAME,\n        (source: string, chunk: webpack.compilation.Chunk) => {\n          if (!needChunkOnDemandLoadingCode(chunk)) {\n            return source;\n          }\n\n          const { requireFn } = compilation.mainTemplate;\n          return Template.asString([\n            `var asyncImportChunkGroups = [`,\n            rankedImportGroups\n              ? rankedImportGroups.map((x) => Template.indent(JSON.stringify(x.chunkIds))).join(',\\n')\n              : '',\n            `];`,\n            `${requireFn}.ee = function (groupOrId, moduleId, importType) {`,\n            Template.indent([\n              `return Promise.all((Array.isArray(groupOrId) ? groupOrId : asyncImportChunkGroups[groupOrId]).map(function (x) { return ${requireFn}.e(x); }))`,\n              `.then(importType ? ${requireFn}.t.bind(0,moduleId,importType) : ${requireFn}.bind(0,moduleId));`\n            ]),\n            `};`,\n            source\n          ]);\n        }\n      );\n    });\n  }\n}\n"]}