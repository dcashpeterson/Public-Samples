"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SystemJsFallbackLoader = void 0;
var tslib_1 = require("tslib");
var ComponentStore_1 = tslib_1.__importDefault(require("../stores/ComponentStore"));
var ManifestStore_1 = tslib_1.__importDefault(require("../stores/ManifestStore"));
var normalizeName_1 = require("../systemjs/normalizeName");
var SPSystemJsComponentLoader_1 = tslib_1.__importDefault(require("../systemjs/SPSystemJsComponentLoader"));
var SystemJsLoader_1 = tslib_1.__importDefault(require("../systemjs/SystemJsLoader"));
var LoadComponentExecutor_1 = tslib_1.__importDefault(require("../utilities/LoadComponentExecutor"));
var SystemJsFallbackLoader = /** @class */ (function () {
    function SystemJsFallbackLoader(serviceScope) {
        this._isInitialized = false;
        this._serviceScope = serviceScope;
        this._executor = new LoadComponentExecutor_1.default(this._loadComponentImpl.bind(this));
    }
    Object.defineProperty(SystemJsFallbackLoader.prototype, "executor", {
        get: function () {
            return this._executor;
        },
        enumerable: false,
        configurable: true
    });
    SystemJsFallbackLoader.prototype.loadComponent = function (manifest) {
        return this._executor.loadComponent(manifest);
    };
    SystemJsFallbackLoader.prototype._loadComponentImpl = function (manifest) {
        var _this = this;
        this._ensureInitialized();
        // At this point we are on a best-effort basis once RequireJS fails to load the component.
        // This is overly expensive but it "just works" to ensure that SystemJS has everything that's needed.
        // Loading a component twice could lead to unexpected behavior and race condition issues.
        ComponentStore_1.default.instance.getAllComponentReferences().forEach(function (value, key) {
            _this._systemJsLoader._ensure((0, normalizeName_1.normalizeFailoverPathName)(key), value);
        });
        ManifestStore_1.default.instance.getRegisteredManifests().forEach(function (m) {
            _this._systemJsLoader.configure(m);
        });
        return this._systemJsComponentLoader
            .loadComponent(manifest)
            .then(function (module) {
            _this._restoreGlobals();
            return module;
        })
            .catch(function (error) {
            _this._restoreGlobals();
            throw error;
        });
    };
    SystemJsFallbackLoader.prototype._ensureInitialized = function () {
        if (this._isInitialized) {
            return;
        }
        this._saveGlobals();
        this._systemJsComponentLoader = new SPSystemJsComponentLoader_1.default(this._serviceScope);
        this._systemJsLoader = this._serviceScope.consume(SystemJsLoader_1.default.serviceKey);
        this._restoreGlobals();
        this._isInitialized = true;
    };
    SystemJsFallbackLoader.prototype._saveGlobals = function () {
        this._requirejs = SystemJsFallbackLoader._window.requirejs;
        this._require = SystemJsFallbackLoader._window.require;
        this._define = SystemJsFallbackLoader._window.define;
    };
    SystemJsFallbackLoader.prototype._restoreGlobals = function () {
        SystemJsFallbackLoader._window.requirejs = this._requirejs;
        SystemJsFallbackLoader._window.require = this._require;
        SystemJsFallbackLoader._window.define = this._define;
    };
    SystemJsFallbackLoader._window = window;
    return SystemJsFallbackLoader;
}());
exports.SystemJsFallbackLoader = SystemJsFallbackLoader;
//# sourceMappingURL=SystemJsFallbackLoader.js.map