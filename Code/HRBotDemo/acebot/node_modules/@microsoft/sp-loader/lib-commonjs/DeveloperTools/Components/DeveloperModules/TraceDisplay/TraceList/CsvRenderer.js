"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.triggerCsvDownload = void 0;
var tslib_1 = require("tslib");
var TraceDisplayStore_1 = require("../../../../Stores/TraceDisplayStore");
var traceFormatting_1 = require("./traceFormatting");
var TraceDisplay_resx_1 = tslib_1.__importDefault(require("../TraceDisplay.resx"));
var HEADER = 'data:text/csv;charset=utf-8';
var NEWLINE = '\n';
var FILENAME = 'spfx_trace_logs.csv';
function triggerCsvDownload(traces) {
    var tracesLength = traces.length;
    if (tracesLength === 0) {
        return;
    }
    var csvContent = _generateCsvContent(traces);
    var link = document.createElement('a');
    link.setAttribute('href', encodeURI("".concat(HEADER, ",").concat(csvContent)));
    link.setAttribute('download', FILENAME);
    link.setAttribute('data-automation-id', 'trace-csv-download-anchor');
    document.body.appendChild(link);
    link.click(); // This will download the data file named "spfx_trace_logs.csv".
    document.body.removeChild(link);
}
exports.triggerCsvDownload = triggerCsvDownload;
function _generateCsvContent(traces) {
    var headerLine = [
        TraceDisplay_resx_1.default.TimestampHeaderLabel,
        TraceDisplay_resx_1.default.LevelHeaderLabel,
        TraceDisplay_resx_1.default.ScopeHeaderLabel,
        TraceDisplay_resx_1.default.SourceHeaderLabel,
        TraceDisplay_resx_1.default.MessageHeaderLabel
    ]
        .map(_escapeCsvField)
        .join(',');
    return "".concat(headerLine).concat(NEWLINE).concat(traces.map(_generateCsvLine).join(NEWLINE));
}
function _generateCsvLine(trace) {
    var logEventArray = [
        (0, traceFormatting_1.formatTimestamp)(trace.timestamp),
        trace.level ? TraceDisplayStore_1.LogLevel[trace.level] : ' ',
        trace.source,
        trace.message ? trace.message : trace.error ? trace.error.message : ' '
    ];
    return logEventArray.map(_escapeCsvField).join(',');
}
function _escapeCsvField(rawField) {
    if (!rawField) {
        return ''; // If the field is undefined or empty, return an empty field
    }
    // Examples:
    // '"' -> '""""'
    // ',' -> '","'
    // '\n' -> '"\n"'
    // 'asdf"asdf' -> '"asdf""asdf"'
    // 'a"b,c\nd' -> '"a""b,c\nd"'
    var escapedField = rawField.replace(/(")/g, '""'); // Escape quotes to double quotes
    if (escapedField.match(/([,"\n])/)) {
        // Detect commas, quotes, and newlines
        escapedField = "\"".concat(escapedField, "\""); // Wrap the field in quotes if it contains any of those characters
    }
    return escapedField;
}
//# sourceMappingURL=CsvRenderer.js.map