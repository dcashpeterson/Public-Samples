"use strict";
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CacheStrategy = void 0;
/**
 * Represents the Cache Strategy to be used by the cached request
 *
 * @internal
 */
// eslint-disable-next-line @typescript-eslint/typedef
exports.CacheStrategy = {
    /**
     * Serves from the server
     */
    NetworkOnly: 0,
    /**
     * Serves from the cache if available or undefined
     */
    CacheOnly: 1,
    /**
     * Serves from the cache if available
     * Sends network request only if cache is stale or not available
     * Update the cache with network data if network call is made
     */
    CacheThenNetwork: 2,
    /**
     * Serves from the cache if available, and makes an async
     * network request to update the cache with fresh data.
     */
    CacheAndNetwork: 3
};
//# sourceMappingURL=IRequestCacheOptions.js.map