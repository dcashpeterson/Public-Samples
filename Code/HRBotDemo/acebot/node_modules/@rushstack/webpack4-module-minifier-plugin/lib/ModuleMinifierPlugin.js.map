{"version":3,"file":"ModuleMinifierPlugin.js","sourceRoot":"","sources":["../src/ModuleMinifierPlugin.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport { createHash, type Hash } from 'crypto';\n\nimport {\n  CachedSource,\n  ConcatSource,\n  RawSource,\n  ReplaceSource,\n  type Source,\n  SourceMapSource\n} from 'webpack-sources';\nimport * as webpack from 'webpack';\nimport { AsyncSeriesWaterfallHook, type SyncHook, SyncWaterfallHook, type TapOptions } from 'tapable';\n\nimport {\n  CHUNK_MODULES_TOKEN,\n  MODULE_WRAPPER_PREFIX,\n  MODULE_WRAPPER_SUFFIX,\n  STAGE_BEFORE,\n  STAGE_AFTER\n} from './Constants';\nimport type {\n  IMinifierConnection,\n  IModuleMinifier,\n  IModuleMinificationResult,\n  IModuleMinificationErrorResult\n} from '@rushstack/module-minifier';\nimport { getIdentifier } from '@rushstack/module-minifier';\n\nimport type {\n  IModuleMinifierPluginOptions,\n  IModuleMap,\n  IAssetMap,\n  IExtendedModule,\n  IModuleMinifierPluginHooks,\n  IPostProcessFragmentContext,\n  IDehydratedAssets,\n  _IWebpackCompilationData,\n  _IAcornComment,\n  IModuleMinifierPluginStats,\n  IAssetStats\n} from './ModuleMinifierPlugin.types';\nimport { generateLicenseFileForAsset } from './GenerateLicenseFileForAsset';\nimport { rehydrateAsset } from './RehydrateAsset';\nimport { AsyncImportCompressionPlugin } from './AsyncImportCompressionPlugin';\nimport { PortableMinifierModuleIdsPlugin } from './PortableMinifierIdsPlugin';\n\nimport './OverrideWebpackIdentifierAllocation';\n\n// The name of the plugin, for use in taps\nconst PLUGIN_NAME: 'ModuleMinifierPlugin' = 'ModuleMinifierPlugin';\n\n// Monotonically increasing identifier to be incremented any time the code generation logic changes\n// Will be applied to the webpack hash.\nconst CODE_GENERATION_REVISION: number = 1;\n\nconst TAP_BEFORE: TapOptions<'promise'> = {\n  name: PLUGIN_NAME,\n  stage: STAGE_BEFORE\n};\nconst TAP_AFTER: TapOptions<'sync'> = {\n  name: PLUGIN_NAME,\n  stage: STAGE_AFTER\n};\n\ninterface IExtendedChunkTemplate {\n  hooks: {\n    hashForChunk: SyncHook<Hash, webpack.compilation.Chunk>;\n    modules: SyncWaterfallHook<Source, webpack.compilation.Chunk>;\n  };\n}\n\ninterface IExtendedParser extends webpack.compilation.normalModuleFactory.Parser {\n  state: {\n    module: IExtendedModule;\n  };\n}\n\ninterface IExtendedModuleTemplate extends webpack.compilation.ModuleTemplate {\n  render: (module: IExtendedModule, dependencyTemplates: unknown, options: unknown) => Source;\n}\n\ninterface IOptionsForHash extends Omit<IModuleMinifierPluginOptions, 'minifier'> {\n  revision: number;\n  minifier: undefined;\n}\n\nconst compilationMetadataMap: WeakMap<webpack.compilation.Compilation, IModuleMinifierPluginStats> =\n  new WeakMap();\n\n/**\n * https://github.com/webpack/webpack/blob/30e747a55d9e796ae22f67445ae42c7a95a6aa48/lib/Template.js#L36-47\n * @param a first id to be sorted\n * @param b second id to be sorted against\n * @returns the sort value\n */\nfunction stringifyIdSortPredicate(a: string | number, b: string | number): -1 | 0 | 1 {\n  const aId: string = a + '';\n  const bId: string = b + '';\n  if (aId < bId) return -1;\n  if (aId > bId) return 1;\n  return 0;\n}\n\nfunction hashCodeFragment(code: string): string {\n  return createHash('sha256').update(code).digest('hex');\n}\n\n/**\n * Base implementation of asset rehydration\n *\n * @param dehydratedAssets The dehydrated assets\n * @param compilation The webpack compilation\n */\nfunction defaultRehydrateAssets(\n  dehydratedAssets: IDehydratedAssets,\n  compilation: webpack.compilation.Compilation\n): IDehydratedAssets {\n  const { assets, modules } = dehydratedAssets;\n\n  const compilationMetadata: IModuleMinifierPluginStats | undefined = compilationMetadataMap.get(compilation);\n  if (!compilationMetadata) {\n    throw new Error(`Could not get compilation metadata`);\n  }\n\n  const { metadataByAssetFileName } = compilationMetadata;\n\n  // Now assets/modules contain fully minified code. Rehydrate.\n  for (const [assetName, info] of assets) {\n    const banner: string = /\\.m?js(\\?.+)?$/.test(assetName)\n      ? generateLicenseFileForAsset(compilation, info, modules)\n      : '';\n\n    const outputSource: Source = rehydrateAsset(info, modules, banner, true);\n    metadataByAssetFileName.set(assetName, {\n      positionByModuleId: info.renderInfo\n    });\n    compilation.assets[assetName] = outputSource;\n  }\n\n  return dehydratedAssets;\n}\n\nfunction isMinificationResultError(\n  result: IModuleMinificationResult\n): result is IModuleMinificationErrorResult {\n  return !!result.error;\n}\n\n// Matche behavior of terser's \"some\" option\nfunction isLicenseComment(comment: _IAcornComment): boolean {\n  // https://github.com/terser/terser/blob/d3d924fa9e4c57bbe286b811c6068bcc7026e902/lib/output.js#L175\n  return /@preserve|@lic|@cc_on|^\\**!/i.test(comment.value);\n}\n\n/**\n * Webpack plugin that minifies code on a per-module basis rather than per-asset. The actual minification is handled by the input `minifier` object.\n * @public\n */\nexport class ModuleMinifierPlugin implements webpack.Plugin {\n  public readonly hooks: IModuleMinifierPluginHooks;\n  public minifier: IModuleMinifier;\n\n  private readonly _enhancers: webpack.Plugin[];\n  private readonly _sourceMap: boolean | undefined;\n\n  private readonly _optionsForHash: IOptionsForHash;\n\n  public constructor(options: IModuleMinifierPluginOptions) {\n    this.hooks = {\n      rehydrateAssets: new AsyncSeriesWaterfallHook(['dehydratedContent', 'compilation']),\n\n      finalModuleId: new SyncWaterfallHook(['id']),\n\n      postProcessCodeFragment: new SyncWaterfallHook(['code', 'context'])\n    };\n\n    const { minifier, sourceMap, usePortableModules = false, compressAsyncImports = false } = options;\n\n    this._optionsForHash = {\n      ...options,\n      minifier: undefined,\n      revision: CODE_GENERATION_REVISION\n    };\n\n    this._enhancers = [];\n\n    if (usePortableModules) {\n      this._enhancers.push(new PortableMinifierModuleIdsPlugin(this.hooks));\n    }\n\n    if (compressAsyncImports) {\n      this._enhancers.push(new AsyncImportCompressionPlugin(this.hooks));\n    }\n\n    this.hooks.rehydrateAssets.tap(PLUGIN_NAME, defaultRehydrateAssets);\n    this.minifier = minifier;\n\n    this._sourceMap = sourceMap;\n  }\n\n  public static getCompilationStatistics(\n    compilation: webpack.compilation.Compilation\n  ): IModuleMinifierPluginStats | undefined {\n    return compilationMetadataMap.get(compilation);\n  }\n\n  public apply(compiler: webpack.Compiler): void {\n    for (const enhancer of this._enhancers) {\n      enhancer.apply(compiler);\n    }\n\n    const {\n      options: { devtool, mode }\n    } = compiler;\n    // The explicit setting is preferred due to accuracy, but try to guess based on devtool\n    const useSourceMaps: boolean =\n      typeof this._sourceMap === 'boolean'\n        ? this._sourceMap\n        : typeof devtool === 'string'\n        ? devtool.endsWith('source-map')\n        : mode === 'production' && devtool !== false;\n\n    this._optionsForHash.sourceMap = useSourceMaps;\n    const binaryConfig: Uint8Array = Buffer.from(JSON.stringify(this._optionsForHash), 'utf-8');\n\n    compiler.hooks.thisCompilation.tap(\n      PLUGIN_NAME,\n      (compilation: webpack.compilation.Compilation, compilationData: _IWebpackCompilationData) => {\n        const { normalModuleFactory } = compilationData;\n\n        function addCommentExtraction(parser: webpack.compilation.normalModuleFactory.Parser): void {\n          parser.hooks.program.tap(PLUGIN_NAME, (program: unknown, comments: _IAcornComment[]) => {\n            (parser as IExtendedParser).state.module.factoryMeta.comments = comments.filter(isLicenseComment);\n          });\n        }\n\n        normalModuleFactory.hooks.parser.for('javascript/auto').tap(PLUGIN_NAME, addCommentExtraction);\n        normalModuleFactory.hooks.parser.for('javascript/dynamic').tap(PLUGIN_NAME, addCommentExtraction);\n        normalModuleFactory.hooks.parser.for('javascript/esm').tap(PLUGIN_NAME, addCommentExtraction);\n\n        /**\n         * Set of local module ids that have been processed.\n         */\n        const submittedModules: Set<string | number> = new Set();\n\n        /**\n         * The text and comments of all minified modules.\n         */\n        const minifiedModules: IModuleMap = new Map();\n\n        /**\n         * The text and comments of all minified chunks. Most of these are trivial, but the runtime chunk is a bit larger.\n         */\n        const minifiedAssets: IAssetMap = new Map();\n\n        const metadataByAssetFileName: Map<string, IAssetStats> = new Map();\n        const compilationStatistics: IModuleMinifierPluginStats = {\n          metadataByAssetFileName\n        };\n        compilationMetadataMap.set(compilation, compilationStatistics);\n\n        let pendingMinificationRequests: number = 0;\n        /**\n         * Indicates that all files have been sent to the minifier and therefore that when pending hits 0, assets can be rehydrated.\n         */\n        let allRequestsIssued: boolean = false;\n\n        let resolveMinifyPromise: () => void;\n\n        const getRealId: (id: number | string) => number | string | undefined = (id: number | string) =>\n          this.hooks.finalModuleId.call(id, compilation);\n\n        const postProcessCode: (\n          code: ReplaceSource,\n          context: IPostProcessFragmentContext\n        ) => ReplaceSource = (code: ReplaceSource, context: IPostProcessFragmentContext) =>\n          this.hooks.postProcessCodeFragment.call(code, context);\n\n        /**\n         * Callback to invoke when a file has finished minifying.\n         */\n        function onFileMinified(): void {\n          if (--pendingMinificationRequests === 0 && allRequestsIssued) {\n            resolveMinifyPromise();\n          }\n        }\n\n        const { minifier } = this;\n\n        let minifierConnection: IMinifierConnection | undefined;\n\n        const requestShortener: webpack.compilation.RequestShortener =\n          compilation.runtimeTemplate.requestShortener;\n\n        /**\n         * Extracts the code for the module and sends it to be minified.\n         * Currently source maps are explicitly not supported.\n         * @param {Source} source\n         * @param {Module} mod\n         */\n        function minifyModule(source: Source, mod: IExtendedModule): Source {\n          const id: string | number | null = mod.id;\n\n          if (id !== null && !submittedModules.has(id)) {\n            // options.chunk contains the current chunk, if needed\n            // Render the source, then hash, then persist hash -> module, return a placeholder\n\n            // Initially populate the map with unminified version; replace during callback\n            submittedModules.add(id);\n\n            const realId: string | number | undefined = getRealId(id);\n\n            if (realId !== undefined && !mod.factoryMeta.skipMinification) {\n              const wrapped: ConcatSource = new ConcatSource(\n                MODULE_WRAPPER_PREFIX + '\\n',\n                source,\n                '\\n' + MODULE_WRAPPER_SUFFIX\n              );\n\n              const nameForMap: string = `(modules)/${realId}`;\n\n              const { source: wrappedCode, map } = useSourceMaps\n                ? wrapped.sourceAndMap()\n                : {\n                    source: wrapped.source(),\n                    map: undefined\n                  };\n\n              const hash: string = hashCodeFragment(wrappedCode);\n\n              ++pendingMinificationRequests;\n\n              minifier.minify(\n                {\n                  hash,\n                  code: wrappedCode,\n                  nameForMap: useSourceMaps ? nameForMap : undefined,\n                  externals: undefined\n                },\n                (result: IModuleMinificationResult) => {\n                  if (isMinificationResultError(result)) {\n                    compilation.errors.push(result.error);\n                  } else {\n                    try {\n                      // Have the source map display the module id instead of the minifier boilerplate\n                      const sourceForMap: string = `// ${mod.readableIdentifier(\n                        requestShortener\n                      )}${wrappedCode.slice(MODULE_WRAPPER_PREFIX.length, -MODULE_WRAPPER_SUFFIX.length)}`;\n\n                      const { code: minified, map: minifierMap } = result;\n\n                      const rawOutput: Source = useSourceMaps\n                        ? new SourceMapSource(\n                            minified, // Code\n                            nameForMap, // File\n                            minifierMap!, // Base source map\n                            sourceForMap, // Source from before transform\n                            map!, // Source Map from before transform\n                            false // Remove original source\n                          )\n                        : new RawSource(minified);\n\n                      const unwrapped: ReplaceSource = new ReplaceSource(rawOutput);\n                      const len: number = minified.length;\n\n                      unwrapped.replace(0, MODULE_WRAPPER_PREFIX.length - 1, '');\n                      unwrapped.replace(len - MODULE_WRAPPER_SUFFIX.length, len - 1, '');\n\n                      const withIds: Source = postProcessCode(unwrapped, {\n                        compilation,\n                        module: mod,\n                        loggingName: mod.identifier()\n                      });\n                      const cached: CachedSource = new CachedSource(withIds);\n\n                      const minifiedSize: number = Buffer.byteLength(cached.source(), 'utf-8');\n                      mod.factoryMeta.minifiedSize = minifiedSize;\n\n                      minifiedModules.set(realId, {\n                        source: cached,\n                        module: mod\n                      });\n                    } catch (err) {\n                      compilation.errors.push(err);\n                    }\n                  }\n\n                  onFileMinified();\n                }\n              );\n            } else {\n              // Route any other modules straight through\n              const cached: CachedSource = new CachedSource(\n                postProcessCode(new ReplaceSource(source), {\n                  compilation,\n                  module: mod,\n                  loggingName: mod.identifier()\n                })\n              );\n\n              const minifiedSize: number = Buffer.byteLength(cached.source(), 'utf-8');\n              mod.factoryMeta.minifiedSize = minifiedSize;\n\n              minifiedModules.set(realId !== undefined ? realId : id, {\n                source: cached,\n                module: mod\n              });\n            }\n          }\n\n          // Return something so that this stage still produces valid ECMAScript\n          return new RawSource('(function(){})');\n        }\n\n        const jsTemplate: IExtendedModuleTemplate = compilation.moduleTemplates\n          .javascript as IExtendedModuleTemplate;\n        const innerRender: IExtendedModuleTemplate['render'] = jsTemplate.render.bind(jsTemplate);\n\n        // The optimizeTree hook is the last async hook that occurs before chunk rendering\n        compilation.hooks.optimizeTree.tapPromise(PLUGIN_NAME, async () => {\n          minifierConnection = await minifier.connect();\n\n          submittedModules.clear();\n\n          const cache: WeakSet<IExtendedModule> = new WeakSet();\n          const defaultSource: Source = new RawSource('');\n\n          // During code generation, send the generated code to the minifier and replace with a placeholder\n          // Hacking this to avoid calling .source() on a concatenated module multiple times\n          jsTemplate.render = (module: IExtendedModule, dependencyTemplates, options) => {\n            if (!cache.has(module)) {\n              cache.add(module);\n              const rendered: Source = innerRender(module, dependencyTemplates, options);\n\n              minifyModule(rendered, module);\n            }\n\n            return defaultSource;\n          };\n        });\n\n        // This should happen before any other tasks that operate during optimizeChunkAssets\n        compilation.hooks.optimizeChunkAssets.tapPromise(\n          TAP_BEFORE,\n          async (chunks: webpack.compilation.Chunk[]): Promise<void> => {\n            // Still need to minify the rendered assets\n            for (const chunk of chunks) {\n              const externals: string[] = [];\n              const externalNames: Map<string, string> = new Map();\n\n              const chunkModuleSet: Set<string | number> = new Set();\n              const allChunkModules: Iterable<IExtendedModule> =\n                chunk.modulesIterable as Iterable<IExtendedModule>;\n              let hasNonNumber: boolean = false;\n              for (const mod of allChunkModules) {\n                if (mod.id !== null) {\n                  if (typeof mod.id !== 'number') {\n                    hasNonNumber = true;\n                  }\n                  chunkModuleSet.add(mod.id);\n\n                  if (mod.external) {\n                    // Match the identifiers generated in the AmdMainTemplatePlugin\n                    // https://github.com/webpack/webpack/blob/444e59f8a427f94f0064cae6765e5a3c4b78596d/lib/AmdMainTemplatePlugin.js#L49\n                    const key: string = `__WEBPACK_EXTERNAL_MODULE_${webpack.Template.toIdentifier(\n                      `${mod.id}`\n                    )}__`;\n                    // The first two identifiers are used for function (module, exports) at the module site\n                    const ordinal: number = 2 + externals.length;\n                    const miniId: string = getIdentifier(ordinal);\n                    externals.push(key);\n                    externalNames.set(key, miniId);\n                  }\n                }\n              }\n\n              const chunkModules: (string | number)[] = Array.from(chunkModuleSet);\n              // Sort by id before rehydration in case we rehydrate a given chunk multiple times\n              chunkModules.sort(\n                hasNonNumber\n                  ? stringifyIdSortPredicate\n                  : (x: string | number, y: string | number) => (x as number) - (y as number)\n              );\n\n              for (const assetName of chunk.files) {\n                const asset: Source = compilation.assets[assetName];\n\n                // Verify that this is a JS asset\n                if (/\\.m?js(\\?.+)?$/.test(assetName)) {\n                  ++pendingMinificationRequests;\n\n                  const rawCode: string = asset.source() as string;\n                  const nameForMap: string = `(chunks)/${assetName}`;\n\n                  const hash: string = hashCodeFragment(rawCode);\n\n                  minifier.minify(\n                    {\n                      hash,\n                      code: rawCode,\n                      nameForMap: useSourceMaps ? nameForMap : undefined,\n                      externals\n                    },\n                    (result: IModuleMinificationResult) => {\n                      if (isMinificationResultError(result)) {\n                        compilation.errors.push(result.error);\n                        // eslint-disable-next-line no-console\n                        console.error(result.error);\n                      } else {\n                        try {\n                          const { code: minified, map: minifierMap } = result;\n\n                          let codeForMap: string = rawCode;\n                          if (useSourceMaps) {\n                            // Pretend the __WEBPACK_CHUNK_MODULES__ token is an array of module ids, so that the source map contains information about the module ids in the chunk\n                            codeForMap = codeForMap.replace(\n                              CHUNK_MODULES_TOKEN,\n                              JSON.stringify(chunkModules, undefined, 2)\n                            );\n                          }\n\n                          const rawOutput: Source = useSourceMaps\n                            ? new SourceMapSource(\n                                minified, // Code\n                                nameForMap, // File\n                                minifierMap!, // Base source map\n                                codeForMap, // Source from before transform\n                                undefined, // Source Map from before transform\n                                false // Remove original source\n                              )\n                            : new RawSource(minified);\n\n                          const withIds: Source = postProcessCode(new ReplaceSource(rawOutput), {\n                            compilation,\n                            module: undefined,\n                            loggingName: assetName\n                          });\n\n                          minifiedAssets.set(assetName, {\n                            source: new CachedSource(withIds),\n                            modules: chunkModules,\n                            chunk,\n                            fileName: assetName,\n                            renderInfo: new Map(),\n                            externalNames\n                          });\n                        } catch (err) {\n                          compilation.errors.push(err);\n                        }\n                      }\n\n                      onFileMinified();\n                    }\n                  );\n                } else {\n                  // This isn't a JS asset. Don't try to minify the asset wrapper, though if it contains modules, those might still get replaced with minified versions.\n                  minifiedAssets.set(assetName, {\n                    // Still need to restore ids\n                    source: postProcessCode(new ReplaceSource(asset), {\n                      compilation,\n                      module: undefined,\n                      loggingName: assetName\n                    }),\n                    modules: chunkModules,\n                    chunk,\n                    fileName: assetName,\n                    renderInfo: new Map(),\n                    externalNames\n                  });\n                }\n              }\n            }\n\n            allRequestsIssued = true;\n\n            if (pendingMinificationRequests) {\n              await new Promise<void>((resolve) => {\n                resolveMinifyPromise = resolve;\n              });\n            }\n\n            // Handle any error from the minifier.\n            await minifierConnection?.disconnect();\n\n            // All assets and modules have been minified, hand them off to be rehydrated\n            await this.hooks.rehydrateAssets.promise(\n              {\n                assets: minifiedAssets,\n                modules: minifiedModules\n              },\n              compilation\n            );\n          }\n        );\n\n        function updateChunkHash(hash: Hash, chunk: webpack.compilation.Chunk): void {\n          // Apply the options hash\n          hash.update(binaryConfig);\n          // Apply the hash from the minifier\n          if (minifierConnection) {\n            hash.update(minifierConnection.configHash, 'utf8');\n          }\n        }\n\n        // Need to update chunk hashes with information from this plugin\n        (compilation.chunkTemplate as unknown as IExtendedChunkTemplate).hooks.hashForChunk.tap(\n          PLUGIN_NAME,\n          updateChunkHash\n        );\n        compilation.mainTemplate.hooks.hashForChunk.tap(PLUGIN_NAME, updateChunkHash);\n\n        // This function is written twice because the parameter order is not the same between the two hooks\n        (compilation.chunkTemplate as unknown as IExtendedChunkTemplate).hooks.modules.tap(\n          TAP_AFTER,\n          (source: Source, chunk: webpack.compilation.Chunk, moduleTemplate: unknown) => {\n            if (moduleTemplate !== compilation.moduleTemplates.javascript) {\n              // This is not a JavaScript asset\n              return source;\n            }\n\n            // Discard the rendered modules\n            return new RawSource(CHUNK_MODULES_TOKEN);\n          }\n        );\n\n        (compilation.mainTemplate as unknown as IExtendedChunkTemplate).hooks.modules.tap(\n          TAP_AFTER,\n          (source: Source, chunk: webpack.compilation.Chunk, hash: unknown, moduleTemplate: unknown) => {\n            if (moduleTemplate !== compilation.moduleTemplates.javascript) {\n              // This is not a JavaScript asset\n              return source;\n            }\n\n            // Discard the rendered modules\n            return new RawSource(CHUNK_MODULES_TOKEN);\n          }\n        );\n      }\n    );\n  }\n}\n"]}