"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseAdaptiveCardExtensionCache = void 0;
var sp_diagnostics_1 = require("@microsoft/sp-diagnostics");
var Killswitches_1 = require("../../common/Killswitches");
/**
 * Cache used by host to save and retrieve LKG cache objects.
 *
 * @internal
 */
var BaseAdaptiveCardExtensionCache = /** @class */ (function () {
    function BaseAdaptiveCardExtensionCache() {
    }
    BaseAdaptiveCardExtensionCache.prototype.get = function (key, instanceId) {
        return this.getFromSource(key, instanceId).then(function (cacheObject) {
            if (!(0, Killswitches_1.isLogACECacheValidityKSActivated)()) {
                var monitor = new sp_diagnostics_1._QosMonitor('ACECache.Get');
                if (cacheObject && new Date().getTime() < cacheObject.expirationTime) {
                    monitor.writeSuccess();
                    return cacheObject;
                }
                else {
                    monitor.writeExpectedFailure(!cacheObject ? 'CacheMiss' : 'CacheExpired');
                    return undefined;
                }
            }
            else {
                if (cacheObject) {
                    return new Date().getTime() < cacheObject.expirationTime ? cacheObject : undefined;
                }
                return undefined;
            }
        });
    };
    return BaseAdaptiveCardExtensionCache;
}());
exports.BaseAdaptiveCardExtensionCache = BaseAdaptiveCardExtensionCache;
//# sourceMappingURL=BaseAdaptiveCardExtensionCache.js.map