{"version":3,"file":"TslintCmdTask.js","sourceRoot":"","sources":["../src/TslintCmdTask.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAE3D,6BAA6B;AAC7B,oEAAoE;AAIpE,uCAAoD;AAYpD;;GAEG;AACH,MAAa,aAAc,SAAQ,iBAA6B;IAC9D;QACE,KAAK,CAAC,QAAQ,EAAE;YACd,cAAc,EAAE,KAAK;SACtB,CAAC,CAAC;IACL,CAAC;IAEM,UAAU;QACf,OAAO,4BAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,SAAS,EAAE,wBAAwB,CAAC,CAAC,CAAC;IACrF,CAAC;IAEM,WAAW;QAChB,IAAI,CAAC,2BAA2B,EAAE,CAAC;QAEnC,MAAM,iBAAiB,GAA8B,IAAI,CAAC,kBAA+C,CAAC;QAC1G,MAAM,YAAY,GAAkB,IAAI,iBAAiB,CAAC,YAAY,CACpE;YACE,cAAc,EAAE,IAAI,CAAC,UAAU,CAAC,cAAc;YAE9C,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;YACpC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;SACzC,EACD,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,iBAAiB,CACvB,CAAC;QAEF,OAAO,YAAY,CAAC,MAAM,EAAE,CAAC;IAC/B,CAAC;CACF;AA5BD,sCA4BC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as path from 'path';\r\nimport { JsonFile, JsonObject } from '@rushstack/node-core-library';\r\nimport type { TslintRunner as TTslintRunner } from '@microsoft/rush-stack-compiler-4.7';\r\nimport type * as TRushStackCompiler from '@microsoft/rush-stack-compiler-4.7';\r\n\r\nimport { RSCTask, IRSCTaskConfig } from './RSCTask';\r\n\r\n/**\r\n * @public\r\n */\r\nexport interface ITslintCmdTaskConfig extends IRSCTaskConfig {\r\n  /**\r\n   * If true, displays warnings as errors. Defaults to false.\r\n   */\r\n  displayAsError?: boolean;\r\n}\r\n\r\n/**\r\n * @public\r\n */\r\nexport class TslintCmdTask extends RSCTask<ITslintCmdTaskConfig> {\r\n  public constructor() {\r\n    super('tslint', {\r\n      displayAsError: false\r\n    });\r\n  }\r\n\r\n  public loadSchema(): JsonObject {\r\n    return JsonFile.load(path.resolve(__dirname, 'schemas', 'tslint-cmd.schema.json'));\r\n  }\r\n\r\n  public executeTask(): Promise<void> {\r\n    this.initializeRushStackCompiler();\r\n\r\n    const rushStackCompiler: typeof TRushStackCompiler = this._rushStackCompiler as typeof TRushStackCompiler;\r\n    const tslintRunner: TTslintRunner = new rushStackCompiler.TslintRunner(\r\n      {\r\n        displayAsError: this.taskConfig.displayAsError,\r\n\r\n        fileError: this.fileError.bind(this),\r\n        fileWarning: this.fileWarning.bind(this)\r\n      },\r\n      this.buildFolder,\r\n      this._terminalProvider\r\n    );\r\n\r\n    return tslintRunner.invoke();\r\n  }\r\n}\r\n"]}