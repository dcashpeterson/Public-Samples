"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.normalizeFailoverPathName = void 0;
var tslib_1 = require("tslib");
var normalizeComponentId_1 = tslib_1.__importDefault(require("../utilities/normalizeComponentId"));
/**
 * This is the base URL for components that will be sent to SystemJS.
 * SystemJS removes the base URL in order to get the right identifier.
 *
 * By having two different base URLs we can differentiate when we are importing components
 * and when it's an accidental import.
 */
var _componentBaseUrl = 'https://component-id.invalid/';
/**
 * Given a manifest, or a manifest and a name, normalizes the name for usage
 * in stores and SystemJS.
 *
 * This is used in order to support versioning for components, and uniquely
 * identify non-component dependencies.
 *
 * Current behavior:
 * Returns <manifestId>_<manifestVersion>.
 * If a name is provided returns the <manifestId>_<manifestVersion>/<name>.
 * It prepends 'https://component-id.invalid/' in order to make it an absolute URL.
 *
 * Final behavior:
 * For a manifest, normalized name will be <componentId>-<version>
 * If a name is provided, normalized name will be <componentId>-<version>-<name>
 */
function normalizeName(manifest, name) {
    if (name) {
        return _componentBaseUrl + [normalizeManifestId(manifest), name].join('/');
    }
    else {
        return _componentBaseUrl + normalizeManifestId(manifest);
    }
}
exports.default = normalizeName;
function normalizeManifestId(manifest) {
    return (0, normalizeComponentId_1.default)(manifest.id, manifest.version);
}
/**
 * This is only used for components that have a failover path (so far, react and react-dom).
 * As the failover path is used when there is no component, they work via its name,
 * but as opposed to the 'path' dependencies, they are unique in SPFx, like a component.
 *
 * They return the name directly, prepended by the component base URL.
 */
function normalizeFailoverPathName(name) {
    return _componentBaseUrl + name;
}
exports.normalizeFailoverPathName = normalizeFailoverPathName;
//# sourceMappingURL=normalizeName.js.map