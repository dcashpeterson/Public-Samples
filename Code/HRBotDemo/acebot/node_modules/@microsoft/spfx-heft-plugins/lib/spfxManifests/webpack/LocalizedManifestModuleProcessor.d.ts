import type { IIntegrityPath, ILocalizedPathModuleConfiguration } from '@microsoft/sp-module-interfaces';
import { type WebpackAssets } from './ManifestPlugin';
/**
 * @internal
 */
export declare type LocalizedPaths = Record<string, string | IIntegrityPath | undefined>;
/**
 * @internal
 */
export interface IGenerateLocalizedManifestModuleOptionsBase {
    bundleName: string;
    localizedPaths: {
        [locale: string]: string | IIntegrityPath;
    };
    firstPassLocaleRemapping: Map<string, string[]> | undefined;
    production: boolean;
    selectedLocales: ReadonlySet<string> | undefined;
}
/**
 * @internal
 */
export interface IGenerateLocalizedManifestModuleGenerateIntegrityOptions extends IGenerateLocalizedManifestModuleOptionsBase {
    generateIntegrity?: boolean;
    assets: WebpackAssets;
}
/**
 * @internal
 */
export interface IGenerateLocalizedManifestModuleExistingIntegrityOptions extends IGenerateLocalizedManifestModuleOptionsBase {
    generateIntegrity?: never;
    assets?: never;
}
/**
 * @internal
 */
export declare type IGenerateLocalizedManifestModuleOptions = IGenerateLocalizedManifestModuleGenerateIntegrityOptions | IGenerateLocalizedManifestModuleExistingIntegrityOptions;
/**
 * @internal
 */
export declare class LocalizedManifestModuleProcessor {
    static readonly LOCALE_MAPPING: Map<string, string[]>;
    static LOCALE_FALLBACK: Map<string, string>;
    static generateLocalizedManifestModule({ bundleName, localizedPaths, firstPassLocaleRemapping, production, selectedLocales, assets, generateIntegrity }: IGenerateLocalizedManifestModuleOptions): ILocalizedPathModuleConfiguration;
    static findDefaultString(localizedPaths: Record<string, string | undefined>): string | undefined;
    static findDefaultString(localizedPaths: LocalizedPaths): string | IIntegrityPath | undefined;
    static applyLocaleRemapping(manifestLocalizedPaths: LocalizedPaths, localeRemapping: Map<string, string[]>): void;
}
//# sourceMappingURL=LocalizedManifestModuleProcessor.d.ts.map